<?xml version="1.0" encoding="utf-8" ?>
<odoo>
    <data>
        <record id="hr_rule_salario_minimo" model="hr.salary.rule">
            <field name="name">Salario mínimo mensual legal vigente</field>
            <field name="sequence" eval="1"/>
            <field name="code">SMMLV</field>
            <field name="active">false</field>
            <field name="rule_type">none</field>
            <field name="category_id" ref="hr_payroll_categories_SMMLV"/>
            <field name="condition_select">none</field>
            <field name="amount_select">fix</field>
            <field name="amount_fix">908526</field>
        </record>
        <!-- valor de UVT para calculo de retefuente-->
        <record id="hr_rule_salario_UVT" model="hr.salary.rule">
            <field name="name">Valor de la Unidad de Valor Tributario (UVT)</field>
            <field name="sequence" eval="2"/>
            <field name="code">UVT</field>
            <field name="active">false</field>
            <field name="category_id" ref="hr_payroll_categories_UVT"/>
            <field name="condition_select">none</field>
            <field name="rule_type">none</field>
            <field name="amount_select">fix</field>
            <field name="amount_fix">36308</field>
        </record>

        <record id="hr_rule_base_salario" model="hr.salary.rule">
            <field name="name">Base Salario</field>
            <field name="active">false</field>
            <field name="sequence" eval="10"/>
            <field name="code">1501</field>
            <field name="category_id" ref="hr_payroll_categories_bases1"/>
            <field name="condition_select">python</field>
            <field name="condition_python">if payslip.is_liquid: 
    result = True</field>
            <field name="rule_type">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = contract.get_wage_for_period(payslip.date_from)</field>
        </record>

        <record id="hr_rule_base_sub_transporte" model="hr.salary.rule">
            <field name="name">Base Auxilio de Transporte</field>
            <field name="active">false</field>
            <field name="sequence" eval="15"/>
            <field name="code">1502</field>
            <field name="rule_type">none</field>
            <field name="category_id" ref="hr_payroll_categories_base_aux"/>
            <field name="condition_select">python</field>
            <field name="condition_python">if payslip.is_liquid: 
    result = contract.get_wage_for_period(payslip.date_from) &lt;= (2*employee.company.salario_minimo) or False</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = employee.company.aux_transporte</field>            
        </record>

        <record id="hr_rule_base_variable" model="hr.salary.rule">
            <field name="name">Base Variable</field>
            <field name="active">false</field>
            <field name="sequence" eval="20"/>
            <field name="code">1503</field>
            <field name="rule_type">none</field>
            <field name="category_id" ref="hr_payroll_categories_bases1"/>
            <field name="condition_select">python</field>
            <field name="condition_python">if payslip.is_liquid: 
    result = True</field>
            <field name="amount_select">fix</field>
            <field name="amount_fix">0</field>
        </record>

        <record id="hr_rule_base_horas_extra" model="hr.salary.rule">
            <field name="name">Promedio de horas extras</field>
            <field name="sequence" eval="25"/>
            <field name="code">1504</field>
            <field name="rule_type">none</field>
            <field name="active">false</field>
            <field name="category_id" ref="hr_payroll_categories_bases1"/>
            <field name="condition_select">python</field>
            <field name="condition_python">if payslip.is_liquid: 
    result = True</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">amount = 0
for slip in employee.slip_ids:
    result = contract._get_provisional(payslip, "T_horas_extras",)</field>
        </record>

        <record id="hr_rule_base_prima" model="hr.salary.rule">
            <field name="name">Base para Prima</field>
            <field name="active">false</field>
            <field name="sequence" eval="30"/>
            <field name="code">1505</field>
            <field name="rule_type">none</field>
            <field name="category_id" ref="hr_payroll_categories_bases2"/>
            <field name="condition_select">python</field>
            <field name="condition_python">if payslip.is_liquid: 
    result = True</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result=categories.base1+categories.base_aux</field>
        </record>

        <record id="hr_rule_base_cesan" model="hr.salary.rule">
            <field name="name">Base para Cesantias</field>
            <field name="active">false</field>
            <field name="sequence" eval="35"/>
            <field name="code">1506</field>
            <field name="rule_type">none</field>
            <field name="category_id" ref="hr_payroll_categories_bases2"/>
            <field name="condition_select">python</field>
            <field name="condition_python">if payslip.is_liquid: 
    result = True</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result=categories.base1+categories.base_aux</field>
        </record>

        <record id="hr_rule_base_vacac" model="hr.salary.rule">
            <field name="name">Base para Vacaciones</field>
            <field name="active">false</field>
            <field name="sequence" eval="40"/>
            <field name="code">1507</field>
            <field name="rule_type">none</field>
            <field name="category_id" ref="hr_payroll_categories_bases2"/>
            <field name="condition_select">python</field>
            <field name="condition_python">if payslip.is_liquid: 
    result = True</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result=categories.base1</field>
        </record>

        <record id="hr_rule_Prima_de_ser_2" model="hr.salary.rule">
            <field name="name">Prima De Servicio.</field>
            <field name="sequence" eval="45"/>
            <field name="code">1508</field>
            <field name="rule_type">devengos</field>
            <field name="active">false</field>
            <field name="category_id" ref="hr_payroll_categories_pri_liq"/>
            <field name="condition_select">python</field>
            <field name="condition_python">if payslip.is_liquid:
    result = True
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = round(payslip.no_prima_liq * inputs.sal_prom.amount / 360)</field>
        </record>

    <record id="hr_rule_cesan" model="hr.salary.rule">
        <field name="name">Cesantías</field>
        <field name="sequence" eval="706"/>
        <field name="code">1119</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_cesan"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if payslip.date_to.day &gt; 25 and payslip.date_to.month == 12 or payslip.is_liquid:
    result = True</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = round(contract.calculate_cesantias(payslip,categories))</field>
    </record>

    <record id="hr_rule_cesan_ven" model="hr.salary.rule">
        <field name="name">Cesantías</field>
        <field name="sequence" eval="706"/>
        <field name="code">1219</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_cesan"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if payslip.date_to.day &gt; 25 and payslip.date_to.month == 12 or payslip.is_liquid:
    result = True</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = round(contract.calculate_cesantias(payslip,categories))</field>
    </record>

    <record id="hr_rule_cesan_ops" model="hr.salary.rule">
        <field name="name">Cesantías</field>
        <field name="sequence" eval="706"/>
        <field name="code">1319</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_cesan"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if payslip.date_to.day &gt; 25 and payslip.date_to.month == 12 or payslip.is_liquid:
    result = True</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = round(contract.calculate_cesantias(payslip,categories))</field>
    </record>

    <record id="hr_rule_incesan" model="hr.salary.rule">
        <field name="name">Intereses Cesantías</field>
        <field name="sequence" eval="707"/>
        <field name="code">1120</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_incesan"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if payslip.date_to.day &gt; 25 and payslip.date_to.month == 12 or payslip.is_liquid:
    result = True</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = round(contract.calculate_int_cesantias(payslip, categories))</field>
    </record>

    <record id="hr_rule_incesan_ven" model="hr.salary.rule">
        <field name="name">Intereses Cesantías</field>
        <field name="sequence" eval="707"/>
        <field name="code">1220</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_incesan"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if payslip.date_to.day &gt; 25 and payslip.date_to.month == 12 or payslip.is_liquid:
    result = True</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = round(contract.calculate_int_cesantias(payslip, categories))</field>
    </record>

    <record id="hr_rule_incesan_ops" model="hr.salary.rule">
        <field name="name">Intereses Cesantías</field>
        <field name="sequence" eval="707"/>
        <field name="code">1320</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_incesan"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if payslip.date_to.day &gt; 25 and payslip.date_to.month == 12 or payslip.is_liquid:
    result = True</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = round(contract.calculate_int_cesantias(payslip, categories))</field>
    </record>

    <record id="hr_rule_cesan_info" model="hr.salary.rule">
        <field name="name">Cesantías (Año Anterior)</field>
        <field name="sequence" eval="706"/>
        <field name="code">1019</field>
        <field name="rule_type">none</field>
        <field name="category_id" ref="hr_payroll_categories_cesan_info"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if payslip.date_to.month == 1 and payslip.is_liquid:
    result = True
elif payslip.date_to.month == 2 and payslip.date_to.day &gt; 25:
    result = True
else:
    result = False</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = contract.calculate_cesantias_info(payslip)</field>
    </record>

    <record id="hr_rule_incesan_info" model="hr.salary.rule">
        <field name="name">Intereses de Cesantías (Año Anterior)</field>
        <field name="sequence" eval="707"/>
        <field name="code">1020</field>
        <field name="rule_type">none</field>
        <field name="category_id" ref="hr_payroll_categories_incesan_info"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if payslip.date_to.month == 1 and payslip.date_to.day &gt; 25 :
    result = True
elif payslip.date_to.month == 1 and payslip.is_liquid:
    result = True
else:
    result = False
        </field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = round(contract.calculate_int_cesantias_info(payslip))</field>
    </record>

    <record id="hr_rule_vac_adm" model="hr.salary.rule">
        <field name="name">Vacaciones Disfrute</field>
        <field name="sequence" eval="710"/>
        <field name="code">1116-1</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_vac"/>
        <field name="condition_select">python</field>
        <field name="condition_python">flag = False
for i in payslip.worked_days_line_ids:
    if i.code == "VACACIONES DE DISFRUTE":
        flag = True
if flag:
    result=True</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result= round(contract.calculate_vacations_dis(payslip))</field>
    </record>

    <record id="hr_rule_vac_ven" model="hr.salary.rule">
        <field name="name">Vacaciones Disfrute</field>
        <field name="sequence" eval="710"/>
        <field name="code">1216-1</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_vac"/>
        <field name="condition_select">python</field>
        <field name="condition_python">flag = False
for i in payslip.worked_days_line_ids:
    if i.code == "VACACIONES DE DISFRUTE":
        flag = True
if flag:
    result=True</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result= round(contract.calculate_vacations_dis(payslip))</field>
    </record>

    <record id="hr_rule_vac_ops" model="hr.salary.rule">
        <field name="name">Vacaciones Disfrute</field>
        <field name="sequence" eval="710"/>
        <field name="code">1316-1</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_vac"/>
        <field name="condition_select">python</field>
        <field name="condition_python">flag = False
for i in payslip.worked_days_line_ids:
    if i.code == "VACACIONES DE DISFRUTE":
        flag = True
if flag:
    result=True</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result= round(contract.calculate_vacations_dis(payslip))</field>
    </record>

    <record id="hr_rule_vac_adm_2" model="hr.salary.rule">
        <field name="name">Vacaciones Compensadas</field>
        <field name="sequence" eval="711"/>
        <field name="code">1116-2</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_vac_comp"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if contract.contract_type == '4':
    result = False
elif payslip.is_liquid or payslip.vacaciones_compensadas:
    result = True
else:
    result = False</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result= round(contract.calculate_vacations_comp(payslip))</field>
    </record>

    <record id="hr_rule_vac_ven_2" model="hr.salary.rule">
        <field name="name">Vacaciones Compensadas</field>
        <field name="sequence" eval="711"/>
        <field name="code">1216-2</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_vac_comp"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if contract.contract_type == '4':
    result = False
elif payslip.is_liquid or payslip.vacaciones_compensadas:
    result = True
else:
    result = False</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result= round(contract.calculate_vacations_comp(payslip))</field>
    </record>

    <record id="hr_rule_vac_ops_2" model="hr.salary.rule">
        <field name="name">Vacaciones Compensadas</field>
        <field name="sequence" eval="711"/>
        <field name="code">1316-2</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_vac_comp"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if contract.contract_type == '4':
    result = False
elif payslip.is_liquid or payslip.vacaciones_compensadas:
    result = True
else:
    result = False</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result= round(contract.calculate_vacations_comp(payslip))</field>
    </record>

    <record id="hr_rule_aus_rem_adm" model="hr.salary.rule">
        <field name="name">Ausencia Remunerada</field>
        <field name="sequence" eval="101"/>
        <field name="code">1140</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_aus_rem"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if worked_days.AUSENCIA_REMUNERADA:
    result = True
        </field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">wage = contract.get_wage_for_period(payslip.date_from)
rem_day = sum(day.number_of_days for day in payslip.worked_days_line_ids if day.code == 'AUSENCIA_REMUNERADA')
result = round((wage / 30) * rem_day)</field>
    </record>

    <record id="hr_rule_aus_rem_ven" model="hr.salary.rule">
        <field name="name">Ausencia Remunerada</field>
        <field name="sequence" eval="101"/>
        <field name="code">1240</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_aus_rem"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if worked_days.AUSENCIA_REMUNERADA:
    result = True
        </field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">wage = contract.get_wage_for_period(payslip.date_from)
rem_day = sum(day.number_of_days for day in payslip.worked_days_line_ids if day.code == 'AUSENCIA_REMUNERADA')
result = round((wage / 30) * rem_day)</field>
    </record>

    <record id="hr_rule_aus_rem_ops" model="hr.salary.rule">
        <field name="name">Ausencia Remunerada</field>
        <field name="sequence" eval="101"/>
        <field name="code">1340</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_aus_rem"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if worked_days.AUSENCIA_REMUNERADA:
    result = True
        </field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">wage = contract.get_wage_for_period(payslip.date_from)
rem_day = sum(day.number_of_days for day in payslip.worked_days_line_ids if day.code == 'AUSENCIA_REMUNERADA')
result = round((wage / 30) * rem_day)</field>
    </record>

    <record id="hr_rule_total_devengado_liq" model="hr.salary.rule">
        <field name="name">Total Liquidación</field>
        <field name="sequence" eval="715"/>
        <field name="code">1512</field>
        <field name="rule_type">none</field>
        <field name="category_id" ref="hr_payroll_categories_total_liq"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if payslip.is_liquid:
    result = True</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = categories.pprim + categories.cesan + categories.intcesan + categories.vac </field>
    </record>

<!--Nueva entrada para anticipar pago de Vacaciones-->
    <record id="hr_rule_vac_sig_adm" model="hr.salary.rule">
        <field name="name">Vacaciones Periodo Siguiente</field>
        <field name="sequence" eval="305"/>
        <field name="code">1116-6</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_odev_salarial"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.vac_sig and inputs.vac_sig.amount:
    result = inputs.vac_sig.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.vac_sig and inputs.vac_sig.amount:
    result = inputs.vac_sig.amount</field>
    </record>

    <record id="hr_rule_vac_sig_ven" model="hr.salary.rule">
        <field name="name">Vacaciones Periodo Siguiente</field>
        <field name="sequence" eval="305"/>
        <field name="code">1216-6</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_odev_salarial"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.vac_sig and inputs.vac_sig.amount:
    result = inputs.vac_sig.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.vac_sig and inputs.vac_sig.amount:
    result = inputs.vac_sig.amount</field>
    </record>

    <record id="hr_rule_vac_sig_ops" model="hr.salary.rule">
        <field name="name">Vacaciones Periodo Siguiente</field>
        <field name="sequence" eval="305"/>
        <field name="code">1316-6</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_odev_salarial"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.vac_sig and inputs.vac_sig.amount:
    result = inputs.vac_sig.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.vac_sig and inputs.vac_sig.amount:
    result = inputs.vac_sig.amount</field>
    </record>
<!--FIN DE VACACIONES ANTICIPADAS-->

    <record id="hr_rule_prima_ns" model="hr.salary.rule">
        <field name="name">Prima De servicio No Salarial</field>
        <field name="sequence" eval="709"/>
        <field name="code">1118-1</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_pprim"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.prima_ns and inputs.prima_ns.amount:
    result = inputs.prima_ns.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.prima_ns and inputs.prima_ns.amount:
    result = inputs.prima_ns.amount</field>
    </record>

    <record id="hr_rule_prima_ns_ven" model="hr.salary.rule">
        <field name="name">Prima De servicio No Salarial</field>
        <field name="sequence" eval="709"/>
        <field name="code">1218-1</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_pprim"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.prima_ns and inputs.prima_ns.amount:
    result = inputs.prima_ns.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.prima_ns and inputs.prima_ns.amount:
    result = inputs.prima_ns.amount</field>
    </record>

    <record id="hr_rule_prima_ns_ops" model="hr.salary.rule">
        <field name="name">Prima De servicio No Salarial</field>
        <field name="sequence" eval="709"/>
        <field name="code">1318-1</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_pprim"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.prima_ns and inputs.prima_ns.amount:
    result = inputs.prima_ns.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.prima_ns and inputs.prima_ns.amount:
    result = inputs.prima_ns.amount</field>
    </record>   
    
    <record id="hr_rule_conce_sa" model="hr.salary.rule">
        <field name="name">Otros Devengos (Salarial)</field>
        <field name="sequence" eval="191"/>
        <field name="code">1127</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_concepto_s"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.conce_sa and inputs.conce_sa.amount:
    result = inputs.conce_sa.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.conce_sa and inputs.conce_sa.amount:
    result = inputs.conce_sa.amount</field>
    </record>

    <record id="hr_rule_conce_sa_ven" model="hr.salary.rule">
        <field name="name">Otros Devengos (Salarial)</field>
        <field name="sequence" eval="191"/>
        <field name="code">1227</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_concepto_s"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.conce_sa and inputs.conce_sa.amount:
    result = inputs.conce_sa.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.conce_sa and inputs.conce_sa.amount:
    result = inputs.conce_sa.amount</field>
    </record>

    <record id="hr_rule_conce_sa_ops" model="hr.salary.rule">
        <field name="name">Otros Devengos (Salarial)</field>
        <field name="sequence" eval="191"/>
        <field name="code">1327</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_concepto_s"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.conce_sa and inputs.conce_sa.amount:
    result = inputs.conce_sa.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.conce_sa and inputs.conce_sa.amount:
    result = inputs.conce_sa.amount</field>
    </record>

    <record id="hr_rule_ajuste_sal_adm" model="hr.salary.rule">
        <field name="name">Otros Devengos (No Salarial)</field>
        <field name="sequence" eval="192"/>
        <field name="code">1101-1</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_odev_salarial"/>
        <field name="condition_select">python</field>
        <field name="condition_python">result = inputs.odev and inputs.odev.amount or False</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result=inputs.odev.amount</field>
    </record>

    <record id="hr_rule_ajuste_sal_ven" model="hr.salary.rule">
        <field name="name">Otros Devengos (No Salarial)</field>
        <field name="sequence" eval="192"/>
        <field name="code">1201-1</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_odev_salarial"/>
        <field name="condition_select">python</field>
        <field name="condition_python">result = inputs.odev and inputs.odev.amount or False</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result=inputs.odev.amount</field>
    </record>

    <record id="hr_rule_ajuste_sal_ops" model="hr.salary.rule">
        <field name="name">Otros Devengos (No Salarial)</field>
        <field name="sequence" eval="192"/>
        <field name="code">1301-1</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_odev_salarial"/>
        <field name="condition_select">python</field>
        <field name="condition_python">result = inputs.odev and inputs.odev.amount or False</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result=inputs.odev.amount</field>
    </record>

    <record id="hr_rule_ajuste_sal_2_adm" model="hr.salary.rule">
        <field name="name">Otros Devengos 2 (Salarial)</field>
        <field name="sequence" eval="193"/>
        <field name="code">1101-2</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_concepto_s"/>
        <field name="condition_select">python</field>
        <field name="condition_python">result = inputs.odev_sal and inputs.odev_sal.amount or False</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result=inputs.odev_sal.amount</field>
    </record>

    <record id="hr_rule_ajuste_sal_2_ven" model="hr.salary.rule">
        <field name="name">Otros Devengos 2 (Salarial)</field>
        <field name="sequence" eval="193"/>
        <field name="code">1201-2</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_concepto_s"/>
        <field name="condition_select">python</field>
        <field name="condition_python">result = inputs.odev_sal and inputs.odev_sal.amount or False</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result=inputs.odev_sal.amount</field>
    </record>

    <record id="hr_rule_ajuste_sal_2_ops" model="hr.salary.rule">
        <field name="name">Otros Devengos 2 (Salarial)</field>
        <field name="sequence" eval="193"/>
        <field name="code">1301-2</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_concepto_s"/>
        <field name="condition_select">python</field>
        <field name="condition_python">result = inputs.odev_sal and inputs.odev_sal.amount or False</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result=inputs.odev_sal.amount</field>
    </record>

    <record id="hr_rule_compe_o" model="hr.salary.rule">
        <field name="name">Compensaciones Ordinarias</field>
        <field name="sequence" eval="173"/>
        <field name="code">1129</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_compensaciones_o"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.compe_o and inputs.compe_o.amount:
    result = inputs.compe_o.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.compe_o and inputs.compe_o.amount:
    result = inputs.compe_o.amount</field>
    </record>

    <record id="hr_rule_compe_ven" model="hr.salary.rule">
        <field name="name">Compensaciones Ordinarias</field>
        <field name="sequence" eval="173"/>
        <field name="code">1229</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_compensaciones_o"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.compe_o and inputs.compe_o.amount:
    result = inputs.compe_o.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.compe_o and inputs.compe_o.amount:
    result = inputs.compe_o.amount</field>
    </record>

    
    <record id="hr_rule_compe_ops" model="hr.salary.rule">
        <field name="name">Compensaciones Ordinarias</field>
        <field name="sequence" eval="173"/>
        <field name="code">1329</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_compensaciones_o"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.compe_o and inputs.compe_o.amount:
    result = inputs.compe_o.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.compe_o and inputs.compe_o.amount:
    result = inputs.compe_o.amount</field>
    </record>

    <record id="hr_rule_compe_e" model="hr.salary.rule">
        <field name="name">Compensaciones Extraordinarias</field>
        <field name="sequence" eval="174"/>
        <field name="code">1130</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_compensaciones_e"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.compe_e and inputs.compe_e.amount:
    result = inputs.compe_e.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.compe_e and inputs.compe_e.amount:
    result = inputs.compe_e.amount</field>
    </record>

    <record id="hr_rule_compeextra_ven" model="hr.salary.rule">
        <field name="name">Compensaciones Extraordinarias</field>
        <field name="sequence" eval="174"/>
        <field name="code">1230</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_compensaciones_e"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.compe_e and inputs.compe_e.amount:
    result = inputs.compe_e.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.compe_e and inputs.compe_e.amount:
    result = inputs.compe_e.amount</field>
    </record>

    <record id="hr_rule_compeextra_ops" model="hr.salary.rule">
        <field name="name">Compensaciones Extraordinarias</field>
        <field name="sequence" eval="174"/>
        <field name="code">1330</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_compensaciones_e"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.compe_e and inputs.compe_e.amount:
    result = inputs.compe_e.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.compe_e and inputs.compe_e.amount:
    result = inputs.compe_e.amount</field>
    </record>

    <record id="hr_rule_pago_terc" model="hr.salary.rule">
        <field name="name">Pagos a Terceros</field>
        <field name="sequence" eval="175"/>
        <field name="code">1131</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_pag_ter"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.pago_terc and inputs.pago_terc.amount:
    result = inputs.pago_terc.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.pago_terc and inputs.pago_terc.amount:
    result = inputs.pago_terc.amount</field>
    </record>

    <record id="hr_rule_pago_ven" model="hr.salary.rule">
        <field name="name">Pagos a Terceros</field>
        <field name="sequence" eval="175"/>
        <field name="code">1231</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_pag_ter"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.pago_terc and inputs.pago_terc.amount:
    result = inputs.pago_terc.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.pago_terc and inputs.pago_terc.amount:
    result = inputs.pago_terc.amount</field>
    </record>

    <record id="hr_rule_pago_ops" model="hr.salary.rule">
        <field name="name">Pagos a Terceros</field>
        <field name="sequence" eval="175"/>
        <field name="code">1331</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_pag_ter"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.pago_terc and inputs.pago_terc.amount:
    result = inputs.pago_terc.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.pago_terc and inputs.pago_terc.amount:
    result = inputs.pago_terc.amount</field>
    </record>

    <record id="hr_rule_apoyo_sost" model="hr.salary.rule">
        <field name="name">Apoyo de Sostenimiento</field>
        <field name="sequence" eval="177"/>
        <field name="code">1133</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_apoyo_sos"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.apoyo_sost and inputs.apoyo_sost.amount:
    result = inputs.apoyo_sost.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.apoyo_sost and inputs.apoyo_sost.amount:
    result = inputs.apoyo_sost.amount</field>
    </record>

    <record id="hr_rule_apoyo_sost_ven" model="hr.salary.rule">
        <field name="name">Apoyo de Sostenimiento</field>
        <field name="sequence" eval="177"/>
        <field name="code">1233</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_apoyo_sos"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.apoyo_sost and inputs.apoyo_sost.amount:
    result = inputs.apoyo_sost.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.apoyo_sost and inputs.apoyo_sost.amount:
    result = inputs.apoyo_sost.amount</field>
    </record>

    <record id="hr_rule_apoyo_sost_ops" model="hr.salary.rule">
        <field name="name">Apoyo de Sostenimiento</field>
        <field name="sequence" eval="177"/>
        <field name="code">1333</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_apoyo_sos"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.apoyo_sost and inputs.apoyo_sost.amount:
    result = inputs.apoyo_sost.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.apoyo_sost and inputs.apoyo_sost.amount:
    result = inputs.apoyo_sost.amount</field>
    </record>

    <record id="hr_rule_teltrabajo" model="hr.salary.rule">
        <field name="name">Teletrabajo</field>
        <field name="sequence" eval="178"/>
        <field name="code">1134</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_teletrabajo"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.teltrabajo and inputs.teltrabajo.amount:
    result = inputs.teltrabajo.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.teltrabajo and inputs.teltrabajo.amount:
    result = inputs.teltrabajo.amount</field>
    </record>

    <record id="hr_rule_teltrabajo_ven" model="hr.salary.rule">
        <field name="name">Teletrabajo</field>
        <field name="sequence" eval="178"/>
        <field name="code">1234</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_teletrabajo"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.teltrabajo and inputs.teltrabajo.amount:
    result = inputs.teltrabajo.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.teltrabajo and inputs.teltrabajo.amount:
    result = inputs.teltrabajo.amount</field>
    </record>

    <record id="hr_rule_teltrabajo_ops" model="hr.salary.rule">
        <field name="name">Teletrabajo</field>
        <field name="sequence" eval="178"/>
        <field name="code">1334</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_teletrabajo"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.teltrabajo and inputs.teltrabajo.amount:
    result = inputs.teltrabajo.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.teltrabajo and inputs.teltrabajo.amount:
    result = inputs.teltrabajo.amount</field>
    </record>

    <record id="hr_rule_boni_retiro" model="hr.salary.rule">
        <field name="name">Bonificaciones de Retiro</field>
        <field name="sequence" eval="179"/>
        <field name="code">1135</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_bon_retiro"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.boni_retiro and inputs.boni_retiro.amount:
    result = inputs.boni_retiro.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.boni_retiro and inputs.boni_retiro.amount:
    result = inputs.boni_retiro.amount</field>
    </record>

    <record id="hr_rule_boni_retiro_ven" model="hr.salary.rule">
        <field name="name">Bonificaciones de Retiro</field>
        <field name="sequence" eval="179"/>
        <field name="code">1235</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_bon_retiro"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.boni_retiro and inputs.boni_retiro.amount:
    result = inputs.boni_retiro.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.boni_retiro and inputs.boni_retiro.amount:
    result = inputs.boni_retiro.amount</field>
    </record>

    <record id="hr_rule_boni_retiro_ops" model="hr.salary.rule">
        <field name="name">Bonificaciones de Retiro</field>
        <field name="sequence" eval="179"/>
        <field name="code">1335</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_bon_retiro"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.boni_retiro and inputs.boni_retiro.amount:
    result = inputs.boni_retiro.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.boni_retiro and inputs.boni_retiro.amount:
    result = inputs.boni_retiro.amount</field>
    </record>

    <record id="hr_rule_reintegro" model="hr.salary.rule">
        <field name="name">Reintegro</field>
        <field name="sequence" eval="180"/>
        <field name="code">1136</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_reint"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.reintegro and inputs.reintegro.amount:
    result = inputs.reintegro.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.reintegro and inputs.reintegro.amount:
    result = inputs.reintegro.amount</field>
    </record>

    <record id="hr_rule_reintegro_ven" model="hr.salary.rule">
        <field name="name">Reintegro</field>
        <field name="sequence" eval="180"/>
        <field name="code">1236</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_reint"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.reintegro and inputs.reintegro.amount:
    result = inputs.reintegro.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.reintegro and inputs.reintegro.amount:
    result = inputs.reintegro.amount</field>
    </record>

    <record id="hr_rule_reintegro_ops" model="hr.salary.rule">
        <field name="name">Reintegro</field>
        <field name="sequence" eval="180"/>
        <field name="code">1336</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_reint"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.reintegro and inputs.reintegro.amount:
    result = inputs.reintegro.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.reintegro and inputs.reintegro.amount:
    result = inputs.reintegro.amount</field>
    </record> 

        <record id="bi_hr_payroll.hr_rule_basic" model="hr.salary.rule">
            <field name="name">Salario Mensual</field>
            <field name="code">1000</field>
            <field name="rule_type">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = contract.get_wage_for_period(payslip.date_from)</field>
        </record>

        <record id="hr_rule_SALARIO_adm" model="hr.salary.rule">
            <field name="name">Salario devengado</field>
            <field name="sequence" eval="100"/>
            <field name="code">1100</field>
            <field name="rule_type">devengos</field>
            <field name="category_id" ref="hr_payroll_categories_SUELDO"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = worked_days.WORK100</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">wage = contract.get_wage_for_period(payslip.date_from)
if contract.contract_type == "4":
    if contract.phase == "teaching_phase":
        wage = wage * 0.5
    elif contract.phase == "practical_phase":
        wage = wage * 0.75
    else:
        wage = wage
result = round((wage / 30) * (worked_days.WORK100 and worked_days.WORK100.number_of_days) + contract.amount_weekend_liquidation(payslip))</field>
        </record>

<record id="hr_rule_SALARIO_ven" model="hr.salary.rule">
            <field name="name">Salario devengado</field>
            <field name="sequence" eval="100"/>
            <field name="code">1200</field>
            <field name="rule_type">devengos</field>
            <field name="category_id" ref="hr_payroll_categories_SUELDO"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = worked_days.WORK100</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">wage = contract.get_wage_for_period(payslip.date_from)
if contract.contract_type == "4":
    if contract.phase == "teaching_phase":
        wage = wage * 0.5
    elif contract.phase == "practical_phase":
        wage = wage * 0.75
    else:
        wage = wage
result = round((wage / 30) * (worked_days.WORK100 and worked_days.WORK100.number_of_days) + contract.amount_weekend_liquidation(payslip))</field>
        </record>


    <record id="hr_rule_SALARIO_ops" model="hr.salary.rule">
            <field name="name">Salario devengado</field>
            <field name="sequence" eval="100"/>
            <field name="code">1300</field>
            <field name="rule_type">devengos</field>
            <field name="category_id" ref="hr_payroll_categories_SUELDO"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = worked_days.WORK100</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">wage = contract.get_wage_for_period(payslip.date_from)
if contract.contract_type == "4":
    if contract.phase == "teaching_phase":
        wage = wage * 0.5
    elif contract.phase == "practical_phase":
        wage = wage * 0.75
    else:
        wage = wage
result = round((wage / 30) * (worked_days.WORK100 and worked_days.WORK100.number_of_days) + contract.amount_weekend_liquidation(payslip))</field>
        </record>

    <record id="hr_rule_bono_epctvs" model="hr.salary.rule">
        <field name="name">Pago Alimentación Salarial - Bono EPCTV</field>
        <field name="sequence" eval="195"/>
        <field name="code">1121-3</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_bon"/>
        <field name="condition_select">python</field>
        <field name="condition_python">result = inputs.PagoAlimentacionS and inputs.PagoAlimentacionS.amount or False</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.PagoAlimentacionS.amount</field>
    </record>

    <record id="hr_rule_bono_epctvs_ven" model="hr.salary.rule">
        <field name="name">Pago Alimentación Salarial - Bono EPCTV</field>
        <field name="sequence" eval="195"/>
        <field name="code">1221-3</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_bon"/>
        <field name="condition_select">python</field>
        <field name="condition_python">result = inputs.PagoAlimentacionS and inputs.PagoAlimentacionS.amount or False</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.PagoAlimentacionS.amount</field>
    </record>

    <record id="hr_rule_bono_epctvs_ops" model="hr.salary.rule">
        <field name="name">Pago Alimentación Salarial - Bono EPCTV</field>
        <field name="sequence" eval="195"/>
        <field name="code">1321-3</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_bon"/>
        <field name="condition_select">python</field>
        <field name="condition_python">result = inputs.PagoAlimentacionS and inputs.PagoAlimentacionS.amount or False</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.PagoAlimentacionS.amount</field>
    </record>
    
    <record id="hr_rule_bono_epctvs_ns" model="hr.salary.rule">
        <field name="name">Pago Alimentación No Salarial - Bono EPCTV</field>
        <field name="sequence" eval="196"/>
        <field name="code">1121-4</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_bon_ns"/>
        <field name="condition_select">python</field>
        <field name="condition_python">result = inputs.PagoAlimentacionNS and inputs.PagoAlimentacionNS.amount or False</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.PagoAlimentacionNS.amount</field>
    </record>

    <record id="hr_rule_bono_epctvs_ns_ven" model="hr.salary.rule">
        <field name="name">Pago Alimentación No Salarial - Bono EPCTV</field>
        <field name="sequence" eval="196"/>
        <field name="code">1221-4</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_bon_ns"/>
        <field name="condition_select">python</field>
        <field name="condition_python">result = inputs.PagoAlimentacionNS and inputs.PagoAlimentacionNS.amount or False</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.PagoAlimentacionNS.amount</field>
    </record>

    <record id="hr_rule_bono_epctvs_ns_ops" model="hr.salary.rule">
        <field name="name">Pago Alimentación No Salarial - Bono EPCTV</field>
        <field name="sequence" eval="196"/>
        <field name="code">1321-4</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_bon_ns"/>
        <field name="condition_select">python</field>
        <field name="condition_python">result = inputs.PagoAlimentacionNS and inputs.PagoAlimentacionNS.amount or False</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.PagoAlimentacionNS.amount</field>
    </record>

    <record id="hr_rule_indemnizacion" model="hr.salary.rule">
        <field name="name">Indemnización</field>
        <field name="sequence" eval="712"/>
        <field name="code">1122</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_indemnizacion"/>
        <field name="condition_select">python</field>
        <field name="condition_python">result = inputs.indem and inputs.indem .amount or False</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.indem.amount</field>
    </record>

    <record id="hr_rule_indemnizacion_ven" model="hr.salary.rule">
        <field name="name">Indemnización</field>
        <field name="sequence" eval="712"/>
        <field name="code">1222</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_indemnizacion"/>
        <field name="condition_select">python</field>
        <field name="condition_python">result = inputs.indem and inputs.indem .amount or False</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.indem.amount</field>
    </record>

    <record id="hr_rule_indemnizacion_ops" model="hr.salary.rule">
        <field name="name">Indemnización</field>
        <field name="sequence" eval="712"/>
        <field name="code">1322</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_indemnizacion"/>
        <field name="condition_select">python</field>
        <field name="condition_python">result = inputs.indem and inputs.indem .amount or False</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.indem.amount</field>
    </record>

    <record id="hr_rule_bon_adm" model="hr.salary.rule">
        <field name="name">Bonificacion Salarial</field>
        <field name="sequence" eval="185"/>
        <field name="code">1102-1</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_bon"/>
        <field name="condition_select">python</field>
        <field name="condition_python">result = inputs.BONO and inputs.BONO.amount or False</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result=inputs.BONO.amount</field>
    </record>

    <record id="hr_rule_bon_ven" model="hr.salary.rule">
            <field name="name">Bonificacion Salarial</field>
            <field name="sequence" eval="185"/>
            <field name="code">1202-1</field>
            <field name="rule_type">devengos</field>
            <field name="category_id" ref="hr_payroll_categories_bon"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = inputs.BONO and inputs.BONO.amount or False</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result=inputs.BONO.amount</field>
        </record>

        <record id="hr_rule_bon_ops" model="hr.salary.rule">
            <field name="name">Bonificacion Salarial</field>
            <field name="sequence" eval="185"/>
            <field name="code">1302-1</field>
            <field name="rule_type">devengos</field>
            <field name="category_id" ref="hr_payroll_categories_bon"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = inputs.BONO and inputs.BONO.amount or False</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result=inputs.BONO.amount</field>
        </record>

<record id="hr_rule_bon_adm_ns" model="hr.salary.rule">
            <field name="name">Bonificacion No Salarial</field>
            <field name="sequence" eval="180"/>
            <field name="code">1102-2</field>
            <field name="rule_type">devengos</field>
            <field name="category_id" ref="hr_payroll_categories_bon_ns"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = inputs.BONO_NS and inputs.BONO_NS.amount or False</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result=inputs.BONO_NS.amount</field>
        </record>

<record id="hr_rule_bon_ven_ns" model="hr.salary.rule">
            <field name="name">Bonificacion No Salarial</field>
            <field name="sequence" eval="180"/>
            <field name="code">1202-2</field>
            <field name="rule_type">devengos</field>
            <field name="category_id" ref="hr_payroll_categories_bon_ns"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = inputs.BONO_NS and inputs.BONO_NS.amount or False</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result=inputs.BONO_NS.amount</field>
        </record>

        <record id="hr_rule_bon_ops_ns" model="hr.salary.rule">
            <field name="name">Bonificacion No Salarial</field>
            <field name="sequence" eval="180"/>
            <field name="code">1302-2</field>
            <field name="rule_type">devengos</field>
            <field name="category_id" ref="hr_payroll_categories_bon_ns"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = inputs.BONO_NS and inputs.BONO_NS.amount or False</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result=inputs.BONO_NS.amount</field>
        </record>

    <record id="hr_rule_rod_adm" model="hr.salary.rule">
        <field name="name">Viaticos, Manutención, Alojamiento Salarial</field>
        <field name="sequence" eval="160"/>
        <field name="code">1103-1</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_rod"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if contract.rodamiento_es_prestacional and inputs.ViaticoManuAlojS and inputs.ViaticoManuAlojS.amount:
    result = True
else:
    result= False</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = round(inputs.ViaticoManuAlojS.amount / 30 * worked_days.WORK100.number_of_days)</field>
    </record>

    <record id="hr_rule_rod_ven" model="hr.salary.rule">
        <field name="name">Viaticos, Manutención, Alojamiento Salarial</field>
        <field name="sequence" eval="160"/>
        <field name="code">1203-1</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_rod"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if contract.rodamiento_es_prestacional and inputs.ViaticoManuAlojS and inputs.ViaticoManuAlojS.amount:
    result = True
else:
    result= False</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = round(inputs.ViaticoManuAlojS.amount / 30 * worked_days.WORK100.number_of_days)</field>
    </record>

    <record id="hr_rule_rod_ops" model="hr.salary.rule">
        <field name="name">Viaticos, Manutención, Alojamiento Salarial</field>
        <field name="sequence" eval="160"/>
        <field name="code">1303-1</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_rod"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if contract.rodamiento_es_prestacional and inputs.ViaticoManuAlojS and inputs.ViaticoManuAlojS.amount:
    result = True
else:
    result= False</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = round(inputs.ViaticoManuAlojS.amount / 30 * worked_days.WORK100.number_of_days)</field>
    </record>

    <record id="hr_rule_rod_adm_ns" model="hr.salary.rule">
        <field name="name">Rodamiento (No Salarial)</field>
        <field name="sequence" eval="170"/>
        <field name="code">1103-2</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_rod_ns"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if not contract.rodamiento_es_prestacional and inputs.ViaticoManuAlojNS and inputs.ViaticoManuAlojNS.amount:
    result = True
else:
    result= False</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = round(inputs.ViaticoManuAlojNS.amount / 30 * worked_days.WORK100.number_of_days)</field>
    </record>

    <record id="hr_rule_rod_ven_ns" model="hr.salary.rule">
        <field name="name">Rodamiento (No Salarial)</field>
        <field name="sequence" eval="170"/>
        <field name="code">1203-2</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_rod_ns"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if not contract.rodamiento_es_prestacional and inputs.ViaticoManuAlojNS and inputs.ViaticoManuAlojNS.amount:
    result = True
else:
    result= False</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = round(inputs.ViaticoManuAlojNS.amount / 30 * worked_days.WORK100.number_of_days)</field>
    </record>

    <record id="hr_rule_rod_ops_ns" model="hr.salary.rule">
        <field name="name">Rodamiento (No Salarial)</field>
        <field name="sequence" eval="170"/>
        <field name="code">1303-2</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_rod_ns"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if not contract.rodamiento_es_prestacional and inputs.ViaticoManuAlojNS and inputs.ViaticoManuAlojNS.amount:
    result = True
else:
    result= False</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = round(inputs.ViaticoManuAlojNS.amount / 30 * worked_days.WORK100.number_of_days)</field>
    </record>

    <record id="hr_rule_manutencion_adm_ns" model="hr.salary.rule">
        <field name="name">Viaticos Manutención / Alojamiento (No Salarial)</field>
        <field name="sequence" eval="170"/>
        <field name="code">1141-2</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_rod_ns"/>
        <field name="condition_select">python</field>
        <field name="condition_python">result = inputs.viat_manut_ns and inputs.viat_manut_ns.amount or False</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = round(inputs.viat_manut_ns.amount)</field>
    </record>

    <record id="hr_rule_manutencion_ven_ns" model="hr.salary.rule">
        <field name="name">Viaticos Manutención / Alojamiento (No Salarial)</field>
        <field name="sequence" eval="170"/>
        <field name="code">1241-2</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_rod_ns"/>
        <field name="condition_select">python</field>
        <field name="condition_python">result = inputs.viat_manut_ns and inputs.viat_manut_ns.amount or False</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = round(inputs.viat_manut_ns.amount)</field>
    </record>

    <record id="hr_rule_manutencion_ops_ns" model="hr.salary.rule">
        <field name="name">Viaticos Manutención / Alojamiento (No Salarial)</field>
        <field name="sequence" eval="170"/>
        <field name="code">1341-2</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_rod_ns"/>
        <field name="condition_select">python</field>
        <field name="condition_python">result = inputs.viat_manut_ns and inputs.viat_manut_ns.amount or False</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = round(inputs.viat_manut_ns.amount)</field>
    </record>

    <record id="hr_rule_manutencion_adm" model="hr.salary.rule">
        <field name="name">Viaticos Manutención / Alojamiento (Salarial)</field>
        <field name="sequence" eval="170"/>
        <field name="code">1142-2</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_rod"/>
        <field name="condition_select">python</field>
        <field name="condition_python">result = inputs.viat_manut and inputs.viat_manut.amount or False</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = round(inputs.viat_manut.amount)</field>
    </record>

    <record id="hr_rule_manutencion_ven" model="hr.salary.rule">
        <field name="name">Viaticos Manutención / Alojamiento (Salarial)</field>
        <field name="sequence" eval="170"/>
        <field name="code">1242-2</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_rod"/>
        <field name="condition_select">python</field>
        <field name="condition_python">result = inputs.viat_manut and inputs.viat_manut.amount or False</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = round(inputs.viat_manut.amount)</field>
    </record>

    <record id="hr_rule_manutencion_ops" model="hr.salary.rule">
        <field name="name">Viaticos Manutención / Alojamiento (Salarial)</field>
        <field name="sequence" eval="170"/>
        <field name="code">1342-2</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_rod"/>
        <field name="condition_select">python</field>
        <field name="condition_python">result = inputs.viat_manut and inputs.viat_manut.amount or False</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = round(inputs.viat_manut.amount)</field>
    </record>

    <record id="hr_rule_com_adm" model="hr.salary.rule">
        <field name="name">Comision</field>
        <field name="sequence" eval="175"/>
        <field name="code">1104</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_comisiones"/>
        <field name="condition_select">python</field>
        <field name="condition_python">result = inputs.VENTAS and inputs.VENTAS.amount or False</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result=inputs.VENTAS.amount</field>
    </record>

    <record id="hr_rule_com_ven" model="hr.salary.rule">
        <field name="name">Comision</field>
        <field name="sequence" eval="175"/>
        <field name="code">1204</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_comisiones"/>
        <field name="condition_select">python</field>
        <field name="condition_python">result = inputs.VENTAS and inputs.VENTAS.amount or False</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result=inputs.VENTAS.amount</field>
    </record>

    <record id="hr_rule_com_ops" model="hr.salary.rule">
        <field name="name">Comision</field>
        <field name="sequence" eval="175"/>
        <field name="code">1304</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_comisiones"/>
        <field name="condition_select">python</field>
        <field name="condition_python">result = inputs.VENTAS and inputs.VENTAS.amount or False</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result=inputs.VENTAS.amount</field>
    </record>

<!-- Dotaciones -->

    <record id="hr_rule_dotacion_adm" model="hr.salary.rule">
        <field name="name">Dotaciones</field>
        <field name="sequence" eval="176"/>
        <field name="code">1123</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_dotacion"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.dotacion and payslip.date_to.month in (4, 8, 12) and payslip.date_to.day in ( 28, 29, 30, 31) and contract.get_wage_for_period(payslip.date_from) &lt;= 2 * employee.company.salario_minimo:
        result = True</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.dotacion.amount</field>
    </record>

    <record id="hr_rule_dotacion_ven" model="hr.salary.rule">
        <field name="name">Dotaciones</field>
        <field name="sequence" eval="176"/>
        <field name="code">1223</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_dotacion"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.dotacion and payslip.date_to.month in (4, 8, 12) and payslip.date_to.day in ( 28, 29, 30, 31) and contract.get_wage_for_period(payslip.date_from) &lt;= 2 * employee.company.salario_minimo:
        result = True</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.dotacion.amount</field>
    </record>

    <record id="hr_rule_dotacion_ops" model="hr.salary.rule">
        <field name="name">Dotaciones</field>
        <field name="sequence" eval="176"/>
        <field name="code">1323</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_dotacion"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.dotacion and payslip.date_to.month in (4, 8, 12) and payslip.date_to.day in ( 28, 29, 30, 31) and contract.get_wage_for_period(payslip.date_from) &lt;= 2 * employee.company.salario_minimo:
        result = True</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.dotacion.amount</field>
    </record>

<!-- auxilio de transporte y subsidio familiar-->

        <record id="hr_rule_auxtra_adm" model="hr.salary.rule">
            <field name="name">Auxilio de Conectividad/Transporte</field>
            <field name="sequence" eval="150"/>
            <field name="code">1105</field>
            <field name="rule_type">devengos</field>
            <field name="category_id" ref="hr_payroll_categories_AUXTRANSPORTE"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = contract.get_wage_for_period(payslip.date_from) &lt;= (2*employee.company.salario_minimo) or False</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if contract.sub_transp_na:
    result = 0
else:
    result = round((worked_days.WORK100.number_of_days) * employee.company.aux_transporte / 30)</field>
        </record>

        <record id="hr_rule_auxtra_ven" model="hr.salary.rule">
            <field name="name">Auxilio de Conectividad/Transporte</field>
            <field name="sequence" eval="150"/>
            <field name="code">1205</field>
            <field name="rule_type">devengos</field>
            <field name="category_id" ref="hr_payroll_categories_AUXTRANSPORTE"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = contract.get_wage_for_period(payslip.date_from) &lt;= (2*employee.company.salario_minimo) or False</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if contract.sub_transp_na:
    result = 0
else:
    result = round((worked_days.WORK100.number_of_days) * employee.company.aux_transporte / 30)</field>
        </record>

        <record id="hr_rule_auxtra_ops" model="hr.salary.rule">
            <field name="name">Auxilio de Conectividad/Transporte</field>
            <field name="sequence" eval="150"/>
            <field name="code">1305</field>
            <field name="rule_type">devengos</field>
            <field name="category_id" ref="hr_payroll_categories_AUXTRANSPORTE"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = contract.get_wage_for_period(payslip.date_from) &lt;= (2*employee.company.salario_minimo) or False</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if contract.sub_transp_na:
    result = 0
else:
    result = round((worked_days.WORK100.number_of_days) * employee.company.aux_transporte / 30)</field>
        </record>

        <record id="hr_rule_auxtra_prima" model="hr.salary.rule">
            <field name="name">Auxilio de Transporte.</field>
            <field name="active">False</field>
            <field name="sequence" eval="150"/>
            <field name="code">1545</field>
            <field name="rule_type">none</field>
            <field name="category_id" ref="hr_payroll_categories_AUXTRANSPORTE_P"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = contract.get_wage_for_period(payslip.date_from) &lt;= (2*employee.company.salario_minimo) or False</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if contract.contract_type == '4' or contract.sub_transp_na:
    result = 0
else:
    result = round((worked_days.WORK100.number_of_days) * employee.company.aux_transporte / 30)</field>
        </record>

        <record id="hr_rule_sub_famili_adm" model="hr.salary.rule">
            <field name="name">Subsidio familiar</field>
            <field name="sequence" eval="409"/>
            <field name="code">1106</field>
            <field name="rule_type">devengos</field>
            <field name="category_id" ref="hr_payroll_categories_AUXTRANSPORTE"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = inputs.subsf and inputs.subsf.amount or False</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = round(worked_days.WORK100.number_of_days*employee.company.aux_transporte / 30)</field>
        </record>

        <record id="hr_rule_sub_famili_ven" model="hr.salary.rule">
            <field name="name">Subsidio familiar</field>
            <field name="sequence" eval="409"/>
            <field name="code">1206</field>
            <field name="rule_type">devengos</field>
            <field name="category_id" ref="hr_payroll_categories_AUXTRANSPORTE"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = inputs.subsf and inputs.subsf.amount or False</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = round(worked_days.WORK100.number_of_days*employee.company.aux_transporte / 30)</field>
        </record>

        <record id="hr_rule_sub_famili_ops" model="hr.salary.rule">
            <field name="name">Subsidio familiar</field>
            <field name="sequence" eval="409"/>
            <field name="code">1306</field>
            <field name="rule_type">devengos</field>
            <field name="category_id" ref="hr_payroll_categories_AUXTRANSPORTE"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = inputs.subsf and inputs.subsf.amount or False</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = (worked_days.WORK100.number_of_days*employee.company.aux_transporte)/30</field>
        </record>

<!-- incapacidades-->

        <record id="hr_rule_inca_mat" model="hr.salary.rule">
            <field name="name">Licencia maternidad</field>
            <field name="sequence" eval="507"/>
            <field name="code">1001</field>
            <field name="rule_type">devengos</field>
            <field name="category_id" ref="hr_payroll_categories_inca"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = worked_days.EPS_maternidad and worked_days.EPS_maternidad.number_of_days or False</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result= round(contract.get_wage_for_period(payslip.date_from) / 30 * worked_days.EPS_maternidad.number_of_days)</field>
        </record>

        <record id="hr_rule_inca_arl" model="hr.salary.rule">
            <field name="name">Licencia ARL</field>
            <field name="sequence" eval="505"/>
            <field name="code">1002</field>
            <field name="rule_type">devengos</field>
            <field name="category_id" ref="hr_payroll_categories_inca"/>
            <field name='register_id' ref='contrib_register_arl'/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = worked_days.incapacidad_ARL and worked_days.incapacidad_ARL.number_of_days or False</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result= round(contract.get_wage_for_period(payslip.date_from) / 30 * worked_days.incapacidad_ARL.number_of_days)</field>
        </record>

        <record id="hr_rule_inca_pat" model="hr.salary.rule">
            <field name="name">Licencia Paternidad</field>
            <field name="sequence" eval="509"/>
            <field name="code">1003</field>
            <field name="rule_type">devengos</field>
            <field name="category_id" ref="hr_payroll_categories_inca"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = worked_days.EPS_paternidad and worked_days.EPS_paternidad.number_of_days or False</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result= round(contract.get_wage_for_period(payslip.date_from) / 30 * worked_days.EPS_paternidad.number_of_days)</field>
        </record>

        <record id="hr_rule_inca_lut" model="hr.salary.rule">
            <field name="name">Licencia Por Luto</field>
            <field name="sequence" eval="500"/>
            <field name="code">1004</field>
            <field name="rule_type">devengos</field>
            <field name="category_id" ref="hr_payroll_licencia_luto"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = worked_days.luto and worked_days.luto.number_of_days or False</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result= round(contract.get_wage_for_period(payslip.date_from) / 30 * worked_days.luto.number_of_days)</field>
        </record>

        <record id="hr_rule_inca_eps_100" model="hr.salary.rule">
            <field name="name">Incapacidad Empleador</field>
            <field name="sequence" eval="501"/>
            <field name="code">1005</field>
            <field name="rule_type">devengos</field>
            <field name="category_id" ref="hr_payroll_categories_inca"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = contract.execute_rule_1005(payslip)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = contract.execute_rule_1005(payslip)</field>
        </record>

        <record id="hr_rule_inca_eps_66" model="hr.salary.rule">
            <field name="name">Incapacidad EPS</field>
            <field name="sequence" eval="502"/>
            <field name="code">1006</field>
            <field name="rule_type">devengos</field>
            <field name="category_id" ref="hr_payroll_categories_inca"/>
            <field name='register_id' ref='contrib_register_eps'/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = contract.execute_rule_1006(payslip)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = contract.execute_rule_1006(payslip)</field>
        </record>

<!-- horas extras-->

    <record id="hr_rule_recargo_nocturno_adm" model="hr.salary.rule">
        <field name="name">Hora Recargo nocturno</field>
        <field name="sequence" eval="204"/>
        <field name="code">1107-1</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_horas_extra"/>
        <field name="condition_select">python</field>
        <field name="condition_python">HRN = employee.get_overtime(employee.id, payslip.date_from, payslip.date_to, "").get('HRN', 0)
result = HRN != 0</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">HRN = employee.get_overtime(employee.id, payslip.date_from, payslip.date_to, "").get('HRN', 0)
result = round(contract.get_wage_for_period(payslip.date_from) / contract.resource_calendar_id.hours_per_week * HRN)</field>
    </record>

    <record id="hr_rule_recargo_nocturno_ven" model="hr.salary.rule">
        <field name="name">Recargo nocturno</field>
        <field name="sequence" eval="204"/>
        <field name="code">1207-1</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_horas_extra"/>
        <field name="condition_select">python</field>
        <field name="condition_python">HRN = employee.get_overtime(employee.id, payslip.date_from, payslip.date_to, "").get('HRN', 0)
result = HRN != 0</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">HRN = employee.get_overtime(employee.id, payslip.date_from, payslip.date_to, "").get('HRN', 0)
result = round(contract.get_wage_for_period(payslip.date_from) / contract.resource_calendar_id.hours_per_week * HRN)</field>
    </record>

    <record id="hr_rule_recargo_nocturno_ops" model="hr.salary.rule">
        <field name="name">Recargo nocturno</field>
        <field name="sequence" eval="204"/>
        <field name="code">1307-1</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_horas_extra"/>
        <field name="condition_select">python</field>
        <field name="condition_python">HRN = employee.get_overtime(employee.id, payslip.date_from, payslip.date_to, "").get('HRN', 0)
result = HRN != 0</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">HRN = employee.get_overtime(employee.id, payslip.date_from, payslip.date_to, "").get('HRN', 0)
result = round(contract.get_wage_for_period(payslip.date_from) / contract.resource_calendar_id.hours_per_week * HRN)</field>
    </record>


    <record id="hr_rule_hora_extra_nocturna_adm" model="hr.salary.rule">
        <field name="name">Hora Extra Nocturna</field>
        <field name="sequence" eval="202"/>
        <field name="code">1107-2</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_horas_extra"/>
        <field name="condition_select">python</field>
        <field name="condition_python">HEN = employee.get_overtime(employee.id, payslip.date_from, payslip.date_to, "").get('HEN', 0)
result = HEN != 0</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">HEN = employee.get_overtime(employee.id, payslip.date_from, payslip.date_to, "").get('HEN', 0)
result = round(contract.get_wage_for_period(payslip.date_from) / contract.resource_calendar_id.hours_per_week * HEN)</field>
    </record>

    <record id="hr_rule_hora_extra_nocturna_ven" model="hr.salary.rule">
        <field name="name">Hora extra nocturna</field>
        <field name="sequence" eval="202"/>
        <field name="code">1207-2</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_horas_extra"/>
        <field name="condition_select">python</field>
        <field name="condition_python">HEN = employee.get_overtime(employee.id, payslip.date_from, payslip.date_to, "").get('HEN', 0)
result = HEN != 0</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">HEN = employee.get_overtime(employee.id, payslip.date_from, payslip.date_to, "").get('HEN', 0)
result = round(contract.get_wage_for_period(payslip.date_from) / contract.resource_calendar_id.hours_per_week * HEN)</field>
    </record>

    <record id="hr_rule_hora_extra_nocturna_ops" model="hr.salary.rule">
        <field name="name">Hora extra nocturna</field>
        <field name="sequence" eval="202"/>
        <field name="code">1307-2</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_horas_extra"/>
        <field name="condition_select">python</field>
        <field name="condition_python">HEN = employee.get_overtime(employee.id, payslip.date_from, payslip.date_to, "").get('HEN', 0)
result = HEN != 0</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">HEN = employee.get_overtime(employee.id, payslip.date_from, payslip.date_to, "").get('HEN', 0)
result = round(contract.get_wage_for_period(payslip.date_from) / contract.resource_calendar_id.hours_per_week * HEN)</field>
    </record>

    <record id="hr_rule_h_diurna_festiva_adm" model="hr.salary.rule">
        <field name="name">Recargo Diurna Dom/Festivos</field>
        <field name="sequence" eval="206"/>
        <field name="code">1107-3</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_horas_extra"/>
        <field name="condition_select">python</field>
        <field name="condition_python">HRDDF = employee.get_overtime(employee.id, payslip.date_from, payslip.date_to, "").get('HRDDF', 0)
result = HRDDF != 0</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">HRDDF = employee.get_overtime(employee.id, payslip.date_from, payslip.date_to, "").get('HRDDF', 0)
result = round(contract.get_wage_for_period(payslip.date_from) / contract.resource_calendar_id.hours_per_week * HRDDF)</field>
    </record>

    <record id="hr_rule_h_diurna_festiva_ven" model="hr.salary.rule">
        <field name="name">Recargo Diurna Dom/Festivos</field>
        <field name="sequence" eval="206"/>
        <field name="code">1207-3</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_horas_extra"/>
        <field name="condition_select">python</field>
        <field name="condition_python">HRDDF = employee.get_overtime(employee.id, payslip.date_from, payslip.date_to, "").get('HRDDF', 0)
result = HRDDF != 0</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">HRDDF = employee.get_overtime(employee.id, payslip.date_from, payslip.date_to, "").get('HRDDF', 0)
result = round(contract.get_wage_for_period(payslip.date_from) / contract.resource_calendar_id.hours_per_week * HRDDF)</field>
    </record>

    <record id="hr_rule_h_diurna_festiva_ops" model="hr.salary.rule">
        <field name="name">Recargo Diurna Dom/Festivos</field>
        <field name="sequence" eval="206"/>
        <field name="code">1307-3</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_horas_extra"/>
        <field name="condition_select">python</field>
        <field name="condition_python">HRDDF = employee.get_overtime(employee.id, payslip.date_from, payslip.date_to, "").get('HRDDF', 0)
result = HRDDF != 0</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">HRDDF = employee.get_overtime(employee.id, payslip.date_from, payslip.date_to, "").get('HRDDF', 0)
result = round(contract.get_wage_for_period(payslip.date_from) / contract.resource_calendar_id.hours_per_week * HRDDF)</field>
    </record>

    <record id="hr_rule_hora_extra_diurno_normal_adm" model="hr.salary.rule">
        <field name="name">Hora Extra Diurno</field>
        <field name="sequence" eval="201"/>
        <field name="code">1107-4</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_horas_extra"/>
        <field name="condition_select">python</field>
        <field name="condition_python">HED = employee.get_overtime(employee.id, payslip.date_from, payslip.date_to, "").get('HED', 0)
result = HED != 0</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">HED = employee.get_overtime(employee.id, payslip.date_from, payslip.date_to, "").get('HED', 0)
result = round(contract.get_wage_for_period(payslip.date_from) / contract.resource_calendar_id.hours_per_week * HED)</field>
    </record>

    <record id="hr_rule_hora_extra_diurno_normal_ven" model="hr.salary.rule">
        <field name="name">Hora extra diurno</field>
        <field name="sequence" eval="201"/>
        <field name="code">1207-4</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_horas_extra"/>
        <field name="condition_select">python</field>
        <field name="condition_python">HED = employee.get_overtime(employee.id, payslip.date_from, payslip.date_to, "").get('HED', 0)
result = HED != 0</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">HED = employee.get_overtime(employee.id, payslip.date_from, payslip.date_to, "").get('HED', 0)
result = round(contract.get_wage_for_period(payslip.date_from) / contract.resource_calendar_id.hours_per_week * HED)</field>
    </record>

    <record id="hr_rule_hora_extra_diurno_normal_ops" model="hr.salary.rule">
        <field name="name">Hora extra diurno</field>
        <field name="sequence" eval="201"/>
        <field name="code">1307-4</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_horas_extra"/>
        <field name="condition_select">python</field>
        <field name="condition_python">HED = employee.get_overtime(employee.id, payslip.date_from, payslip.date_to, "").get('HED', 0)
result = HED != 0</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">HED = employee.get_overtime(employee.id, payslip.date_from, payslip.date_to, "").get('HED', 0)
result = round(contract.get_wage_for_period(payslip.date_from) / contract.resource_calendar_id.hours_per_week * HED)</field>
    </record>

    <record id="hr_rule_recargo_nocturna_f_d_adm" model="hr.salary.rule">
        <field name="name">Recargo nocturno festivo y dominical</field>
        <field name="sequence" eval="205"/>
        <field name="code">1107-5</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_horas_extra"/>
        <field name="condition_select">python</field>
        <field name="condition_python">HRNDF = employee.get_overtime(employee.id, payslip.date_from, payslip.date_to, "").get('HRNDF', 0)
result = HRNDF != 0</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">HRNDF = employee.get_overtime(employee.id, payslip.date_from, payslip.date_to, "").get('HRNDF', 0)
result = round(contract.get_wage_for_period(payslip.date_from) / contract.resource_calendar_id.hours_per_week * HRNDF)</field>
    </record>

    <record id="hr_rule_recargo_nocturna_f_d_ven" model="hr.salary.rule">
        <field name="name">Recargo nocturno festivo y dominical</field>
        <field name="sequence" eval="205"/>
        <field name="code">1207-5</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_horas_extra"/>
        <field name="condition_select">python</field>
        <field name="condition_python">HRNDF = employee.get_overtime(employee.id, payslip.date_from, payslip.date_to, "").get('HRNDF', 0)
result = HRNDF != 0</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">HRNDF = employee.get_overtime(employee.id, payslip.date_from, payslip.date_to, "").get('HRNDF', 0)
result = round(contract.get_wage_for_period(payslip.date_from) / contract.resource_calendar_id.hours_per_week * HRNDF)</field>
    </record>

    <record id="hr_rule_recargo_nocturna_f_d_ops" model="hr.salary.rule">
        <field name="name">Recargo nocturno festivo y dominical</field>
        <field name="sequence" eval="205"/>
        <field name="code">1307-5</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_horas_extra"/>
        <field name="condition_select">python</field>
        <field name="condition_python">HRNDF = employee.get_overtime(employee.id, payslip.date_from, payslip.date_to, "").get('HRNDF', 0)
result = HRNDF != 0</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">HRNDF = employee.get_overtime(employee.id, payslip.date_from, payslip.date_to, "").get('HRNDF', 0)
result = round(contract.get_wage_for_period(payslip.date_from) / contract.resource_calendar_id.hours_per_week * HRNDF)</field>
    </record>

    <record id="hr_rule_hora_extra_diurna_festiva_adm" model="hr.salary.rule">
        <field name="name">Hora extra diurna domingos y festivo</field>
        <field name="sequence" eval="200"/>
        <field name="code">1107-6</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_horas_extra"/>
        <field name="condition_select">python</field>
        <field name="condition_python">HEDDF = employee.get_overtime(employee.id, payslip.date_from, payslip.date_to, "").get('HEDDF', 0)
result = HEDDF != 0</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">HEDDF = employee.get_overtime(employee.id, payslip.date_from, payslip.date_to, "").get('HEDDF', 0)
result = round(contract.get_wage_for_period(payslip.date_from) / contract.resource_calendar_id.hours_per_week * HEDDF)</field>
    </record>

    <record id="hr_rule_hora_extra_diurna_festiva_ven" model="hr.salary.rule">
        <field name="name">Hora extra diurna domingos y festivo</field>
        <field name="sequence" eval="200"/>
        <field name="code">1207-6</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_horas_extra"/>
        <field name="condition_select">python</field>
        <field name="condition_python">HEDDF = employee.get_overtime(employee.id, payslip.date_from, payslip.date_to, "").get('HEDDF', 0)
result = HEDDF != 0</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">HEDDF = employee.get_overtime(employee.id, payslip.date_from, payslip.date_to, "").get('HEDDF', 0)
result = round(contract.get_wage_for_period(payslip.date_from) / contract.resource_calendar_id.hours_per_week * HEDDF)</field>
    </record>

    <record id="hr_rule_hora_extra_diurna_festiva_ops" model="hr.salary.rule">
        <field name="name">Hora extra diurna domingos y festivo</field>
        <field name="sequence" eval="200"/>
        <field name="code">1307-6</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_horas_extra"/>
        <field name="condition_select">python</field>
        <field name="condition_python">HEDDF = employee.get_overtime(employee.id, payslip.date_from, payslip.date_to, "").get('HEDDF', 0)
result = HEDDF != 0</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">HEDDF = employee.get_overtime(employee.id, payslip.date_from, payslip.date_to, "").get('HEDDF', 0)
result = round(contract.get_wage_for_period(payslip.date_from) / contract.resource_calendar_id.hours_per_week * HEDDF)</field>
    </record>

    <record id="hr_rule_hora_extra_nocturna_festiva_adm" model="hr.salary.rule">
        <field name="name">Hora extra nocturna domingos y festivo</field>
        <field name="sequence" eval="203"/>
        <field name="code">1107-7</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_horas_extra"/>
        <field name="condition_select">python</field>
        <field name="condition_python">HENDF = employee.get_overtime(employee.id, payslip.date_from, payslip.date_to, "").get('HENDF', 0)
result = HENDF != 0</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">HENDF = employee.get_overtime(employee.id, payslip.date_from, payslip.date_to, "").get('HENDF', 0)
result = round(contract.get_wage_for_period(payslip.date_from) / contract.resource_calendar_id.hours_per_week * HENDF)</field>
    </record>

    <record id="hr_rule_hora_extra_nocturna_festiva_ven" model="hr.salary.rule">
        <field name="name">Hora extra nocturna domingos y festivo</field>
        <field name="sequence" eval="203"/>
        <field name="code">1207-7</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_horas_extra"/>
        <field name="condition_select">python</field>
        <field name="condition_python">HENDF = employee.get_overtime(employee.id, payslip.date_from, payslip.date_to, "").get('HENDF', 0)
result = HENDF != 0</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">HENDF = employee.get_overtime(employee.id, payslip.date_from, payslip.date_to, "").get('HENDF', 0)
result = round(contract.get_wage_for_period(payslip.date_from) / contract.resource_calendar_id.hours_per_week * HENDF)</field>
    </record>

    <record id="hr_rule_hora_extra_nocturna_festiva_ops" model="hr.salary.rule">
        <field name="name">Hora Extra Nocturna Domingos/Festivo</field>
        <field name="sequence" eval="203"/>
        <field name="code">1307-7</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_horas_extra"/>
        <field name="condition_select">python</field>
        <field name="condition_python">HENDF = employee.get_overtime(employee.id, payslip.date_from, payslip.date_to, "").get('HENDF', 0)
result = HENDF != 0</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">HENDF = employee.get_overtime(employee.id, payslip.date_from, payslip.date_to, "").get('HENDF', 0)
result = round(contract.get_wage_for_period(payslip.date_from) / contract.resource_calendar_id.hours_per_week * HENDF)</field>
    </record>

    <record id="hr_rule_Prima_de_ser" model="hr.salary.rule">
            <field name="name">Prima De servicio</field>
            <field name="sequence" eval="709"/>
            <field name="code">1118</field>
            <field name="rule_type">devengos</field>
            <field name="category_id" ref="hr_payroll_pprim"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = contract.payment_prima_conditional(payslip)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if inputs.prima and inputs.prima.amount:
    result = inputs.prima.amount
elif not contract.prima_acumuladas_ids or (not contract.prima_acumuladas_ids and payslip.is_liquid):
    result = categories.pro_pri
else:
    result = contract._calculate_payment_prima(categories, payslip)</field>
        </record>

    <record id="hr_rule_Prima_de_ser_ven" model="hr.salary.rule">
            <field name="name">Prima De servicio</field>
            <field name="sequence" eval="709"/>
            <field name="code">1218</field>
            <field name="rule_type">devengos</field>
            <field name="category_id" ref="hr_payroll_pprim"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = contract.payment_prima_conditional(payslip)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if inputs.prima and inputs.prima.amount:
    result = inputs.prima.amount
elif not contract.prima_acumuladas_ids or (not contract.prima_acumuladas_ids and payslip.is_liquid):
    result = categories.pro_pri
else:
    result = contract._calculate_payment_prima(categories, payslip)</field>
        </record>

        <record id="hr_rule_Prima_de_ser_ops" model="hr.salary.rule">
            <field name="name">Prima De servicio</field>
            <field name="sequence" eval="709"/>
            <field name="code">1318</field>
            <field name="rule_type">devengos</field>
            <field name="category_id" ref="hr_payroll_pprim"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = contract.payment_prima_conditional(payslip)</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if inputs.prima and inputs.prima.amount:
    result = inputs.prima.amount
elif not contract.prima_acumuladas_ids or (not contract.prima_acumuladas_ids and payslip.is_liquid):
    result = categories.pro_pri
else:
    result = contract._calculate_payment_prima(categories, payslip)</field>
        </record>

        <record id="hr_rule_auxilio_adm" model="hr.salary.rule">
            <field name="name">Auxilio Salarial</field>
            <field name="sequence" eval="641"/>
            <field name="code">1124</field>
            <field name="rule_type">devengos</field>
            <field name="category_id" ref="hr_payroll_categories_auxilio"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = inputs.auxilio and inputs.auxilio.amount or False</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = inputs.auxilio.amount</field>
        </record>

        <record id="hr_rule_auxilio_ven" model="hr.salary.rule">
            <field name="name">Auxilio Salarial</field>
            <field name="sequence" eval="641"/>
            <field name="code">1124</field>
            <field name="rule_type">devengos</field>
            <field name="category_id" ref="hr_payroll_categories_auxilio"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = inputs.auxilio and inputs.auxilio.amount or False</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = inputs.auxilio.amount</field>
        </record>

        <record id="hr_rule_auxilio_ops" model="hr.salary.rule">
            <field name="name">Auxilio Salarial</field>
            <field name="sequence" eval="641"/>
            <field name="code">1124</field>
            <field name="rule_type">devengos</field>
            <field name="category_id" ref="hr_payroll_categories_auxilio"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = inputs.auxilio and inputs.auxilio.amount or False</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = inputs.auxilio.amount</field>
        </record>

        <record id="hr_rule_auxilio_ns_adm" model="hr.salary.rule">
            <field name="name">Auxilio No Salarial</field>
            <field name="sequence" eval="640"/>
            <field name="code">1125</field>
            <field name="rule_type">devengos</field>
            <field name="category_id" ref="hr_payroll_categories_auxilio_ns"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = inputs.auxilio_ns and inputs.auxilio_ns.amount or False</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = inputs.auxilio_ns.amount</field>
        </record>

        <record id="hr_rule_auxilio_ns_ven" model="hr.salary.rule">
            <field name="name">Auxilio No Salarial</field>
            <field name="sequence" eval="640"/>
            <field name="code">1125</field>
            <field name="rule_type">devengos</field>
            <field name="category_id" ref="hr_payroll_categories_auxilio_ns"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = inputs.auxilio_ns and inputs.auxilio_ns.amount or False</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = inputs.auxilio_ns.amount</field>
        </record>

        <record id="hr_rule_auxilio_ns_ops" model="hr.salary.rule">
            <field name="name">Auxilio No Salarial</field>
            <field name="sequence" eval="640"/>
            <field name="code">1125</field>
            <field name="rule_type">devengos</field>
            <field name="category_id" ref="hr_payroll_categories_auxilio_ns"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = inputs.auxilio_ns and inputs.auxilio_ns.amount or False</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = inputs.auxilio_ns.amount</field>
        </record>

        <record id="hr_rule_bono_epctvs_pago" model="hr.salary.rule">
            <field name="name">Pago Salarial - Bono EPCTV</field>
            <field name="sequence" eval="193"/>
            <field name="code">1121-1</field>
            <field name="rule_type">devengos</field>
            <field name="category_id" ref="hr_payroll_categories_bon"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = inputs.PagoS and inputs.PagoS.amount or False</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = inputs.PagoS.amount</field>
        </record>

        <record id="hr_rule_bono_epctvs_pago_ven" model="hr.salary.rule">
            <field name="name">Pago Salarial - Bono EPCTV</field>
            <field name="sequence" eval="193"/>
            <field name="code">1221-1</field>
            <field name="rule_type">devengos</field>
            <field name="category_id" ref="hr_payroll_categories_bon"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = inputs.PagoS and inputs.PagoS.amount or False</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = inputs.PagoS.amount</field>
        </record>

        <record id="hr_rule_bono_epctvs_pago_ops" model="hr.salary.rule">
            <field name="name">Pago Salarial - Bono EPCTV</field>
            <field name="sequence" eval="193"/>
            <field name="code">1321-1</field>
            <field name="rule_type">devengos</field>
            <field name="category_id" ref="hr_payroll_categories_bon"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = inputs.PagoS and inputs.PagoS.amount or False</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = inputs.PagoS.amount</field>
        </record>
        
        <record id="hr_rule_bono_epctvs_pago_ns" model="hr.salary.rule">
            <field name="name">Pago No Salarial - Bono EPCTV</field>
            <field name="sequence" eval="194"/>
            <field name="code">1121-2</field>
            <field name="rule_type">devengos</field>
            <field name="category_id" ref="hr_payroll_categories_bon_ns"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = inputs.PagoNS and inputs.PagoNS.amount or False</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = inputs.PagoNS.amount</field>
        </record>

        <record id="hr_rule_bono_epctvs_pago_ns_ven" model="hr.salary.rule">
            <field name="name">Pago No Salarial - Bono EPCTV</field>
            <field name="sequence" eval="194"/>
            <field name="code">1221-2</field>
            <field name="rule_type">devengos</field>
            <field name="category_id" ref="hr_payroll_categories_bon_ns"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = inputs.PagoNS and inputs.PagoNS.amount or False</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = inputs.PagoNS.amount</field>
        </record>

        <record id="hr_rule_bono_epctvs_pago_ns_ops" model="hr.salary.rule">
            <field name="name">Pago No Salarial - Bono EPCTV</field>
            <field name="sequence" eval="194"/>
            <field name="code">1321-2</field>
            <field name="rule_type">devengos</field>
            <field name="category_id" ref="hr_payroll_categories_bon_ns"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = inputs.PagoNS and inputs.PagoNS.amount or False</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = inputs.PagoNS.amount</field>
        </record>

        <record id="hr_rule_base_prestacional" model="hr.salary.rule">
            <field name="name">Ingreso Base de Cotización</field>
            <field name="sequence" eval="650"/>
            <field name="code">1540</field>
            <field name="rule_type">none</field>
            <field name="category_id" ref="hr_payroll_categories_base_prestacional"/>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">IBC = (contract.get_wage_for_period(payslip.date_from) / 30 * worked_days.WORK100.number_of_days) + categories.aus_rem + categories.HORAS_EXTRAS + categories.rod + categories.inc + categories.luto + categories.auxilio + categories.apen + categories.com + categories.bono + categories.concepto_s + contract.calculate_vacations_dis(payslip)
if not contract.variable_wage:
    result = round(IBC)
else:
    result = round(IBC * 0.7)
            </field>    
        </record>
        <!-- Fin Fevengos-->  
            
        <!-- Inicio Deducciones-->
        <record id="hr_rule_sal" model="hr.salary.rule">
            <field name="name">Salud Empleado</field>
            <field name="sequence" eval="805"/>
            <field name="code">1008</field>
            <field name="rule_type">deducciones</field>
            <field name="category_id" ref="hr_payroll_categories_sal"/>
            <field name='register_id' ref='contrib_register_eps'/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = True</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">total_days=contract.calculate_active_days(payslip)
if contract.contract_type == "4" or contract.employee_id.employee_type in ('02'):
    result = 0
elif total_days != 0:
    if categories.base_p/total_days &lt; employee.company.salario_minimo/30:
        result = round(employee.company.salario_minimo/30 * total_days * 0.04)
    elif categories.base_p &gt; (10 * employee.company.salario_minimo):
        result = employee.company.salario_minimo
    else:
        result = round(categories.base_p * 0.04)
else: #Ausencia No Remunerada
    result = 0</field>
        </record>

        <record id="hr_rule_pen" model="hr.salary.rule">
            <field name="name">Pensión Empleado</field>
            <field name="sequence" eval="808"/>
            <field name="code">1009</field>
            <field name="rule_type">deducciones</field>
            <field name="category_id" ref="hr_payroll_categories_pen"/>
            <field name='register_id' ref='contrib_register_pension'/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = True</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">total_days=contract.calculate_active_days(payslip)
if contract.contract_type in ('4','5') or contract.employee_id.employee_subtype in ('01') or contract.employee_id.employee_type in ('02'):
    result = 0
elif total_days != 0:
    #Calculo del IBC
    if categories.base_p/total_days &lt; employee.company.salario_minimo/30:
        IBC = employee.company.salario_minimo / 30 * total_days
    else:
        IBC = categories.base_p
    if IBC &gt; (10 * employee.company.salario_minimo):
        result = employee.company.salario_minimo
    else:
        result = round(IBC * 0.04)
else: #Ausencia No Remunerada
    result = 0</field>
        </record>

        <record id="hr_rule_apen" model="hr.salary.rule">
            <field name="name">Aporte Pensión Empleado</field>
            <field name="sequence" eval="806"/>
            <field name="code">1010</field>
            <field name="rule_type">deducciones</field>
            <field name="category_id" ref="hr_payroll_categories_apen"/>
            <field name='register_id' ref='contrib_register_pension'/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = worked_days.AUSENCIA_NO_REMUNERADO and worked_days.AUSENCIA_NO_REMUNERADO.number_of_days or False</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if contract._get_rule_amount_previous_month(payslip.date_from,["base_p"]) == 0:
    result= round(contract.get_wage_for_period(payslip.date_from) / 30 * worked_days.AUSENCIA_NO_REMUNERADO.number_of_days * 0.04)
else:
    result = round(contract.get_wage_for_period(payslip.date_from) / 30 * worked_days.AUSENCIA_NO_REMUNERADO.number_of_days * 0.04)</field>
        </record>

        <record id="hr_rule_fsp" model="hr.salary.rule">
            <field name="name">Fondo de Solidaridad Pensional (FSP)</field>
            <field name="sequence" eval="809"/>
            <field name="code">1011</field>
            <field name="rule_type">deducciones</field>
            <field name="category_id" ref="hr_payroll_categories_fsp"/>
            <field name="register_id" ref="contrib_register_pension"/>
            <field name="condition_select">python</field>
            <field name="condition_python">if inputs.fsp and inputs.fsp.amount:
    result = round(inputs.fsp.amount)
elif payslip.date_to.day in (28, 29, 30, 31) or payslip.pagar_fsp:
    previus_bweek = contract.get_last_biweek(payslip, ["base_p"])
    IBC = previus_bweek + categories.base_p
    IBC_SMMLV = IBC / employee.company.salario_minimo
    result = IBC_SMMLV &gt;= 4</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if inputs.fsp and inputs.fsp.amount:
    result = round(inputs.fsp.amount)
elif payslip.date_to.day in (28, 29, 30, 31) or payslip.pagar_fsp:
    result = contract._calculate_fsp(categories, payslip)
            </field>
        </record>

        <record id="hr_rule_ded_dep" model="hr.salary.rule">
            <field name="name">Deduccion dependiente</field>
            <field name="active">False</field>
            <field name="sequence" eval="833"/>
            <field name="code">1007</field>
            <field name="rule_type">deducciones</field>
            <field name="category_id" ref="hr_payroll_categories_ded_dep"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = contract.get_wage_for_period(payslip.date_from)/employee.company.salario_uvt &gt;= 95 and (employee.other_dependent_people or employee.disabled_children_number &gt; 0) </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = (((contract.get_wage_for_period(payslip.date_from)/30)*worked_days.WORK100.number_of_days)+categories.HORAS_EXTRAS)*0.1</field>
        </record>

        <record id="hr_rule_descuentos" model="hr.salary.rule">
            <field name="name">Descuentos</field>
            <field name="sequence" eval="834"/>
            <field name="code">1012</field>
            <field name="rule_type">deducciones</field>
            <field name="category_id" ref="hr_payroll_descuento"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result=inputs.des and inputs.des.amount</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result=inputs.des.amount</field>
        </record>

        <record id="hr_payslip_pago_teceros" model="hr.salary.rule">
            <field name="code">1016</field>
            <field name="name">Pago Terceros</field>
            <field name="rule_type">deducciones</field>
            <field name="category_id" ref="hr_payroll_categories_pagoterc"/>
            <field name="condition_select">python</field>            
            <field name="condition_python">result = inputs.PagosTerceros and inputs.PagosTerceros.amount or False</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = inputs.PagosTerceros and inputs.PagosTerceros.amount</field>
            <field name="appears_on_payslip" eval="True"/>
            <field name="sequence" eval="815"/>
        </record>

        <record id="hr_rule_retefuente" model="hr.salary.rule">
            <field name="name">Retención en la fuente</field>
            <field name="sequence" eval="840"/>
            <field name="code">1014</field>
            <field name="rule_type">deducciones</field>
            <field name="category_id" ref="hr_payroll_categories_retefuente"/>
            <field name="condition_select">python</field>
            <field name="condition_python">UVT = contract.employee_id.company_id.salario_uvt
if inputs.retefuente and inputs.retefuente.amount:
    result = True
elif contract.get_wage_for_period(payslip.date_from) &gt; UVT * 95 and (payslip.date_to.day in (28,29,30,31) or payslip.is_liquid):
    result= True
else:
    result= False
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">if inputs.retefuente and inputs.retefuente.amount:
    result = inputs.retefuente.amount
else:
    result = contract._calculate_retefuente(payslip, categories)
</field>
        </record>

    <record id="hr_rule_san_public" model="hr.salary.rule">
        <field name="name">Sanciones Publicas</field>
        <field name="sequence" eval="810"/>
        <field name="code">1137</field>
        <field name="rule_type">deducciones</field>
        <field name="category_id" ref="hr_payroll_categories_sancion_publica"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.sancion_public and inputs.sancion_public.amount:
    result = inputs.sancion_public.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.sancion_public and inputs.sancion_public.amount:
    result = inputs.sancion_public.amount</field>
    </record>

    <record id="hr_rule_san_public_ven" model="hr.salary.rule">
        <field name="name">Sanciones Publicas</field>
        <field name="sequence" eval="810"/>
        <field name="code">1237</field>
        <field name="rule_type">deducciones</field>
        <field name="category_id" ref="hr_payroll_categories_sancion_publica"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.sancion_public and inputs.sancion_public.amount:
    result = inputs.sancion_public.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.sancion_public and inputs.sancion_public.amount:
    result = inputs.sancion_public.amount</field>
    </record>

    <record id="hr_rule_san_public_ops" model="hr.salary.rule">
        <field name="name">Sanciones Publicas</field>
        <field name="sequence" eval="810"/>
        <field name="code">1337</field>
        <field name="rule_type">deducciones</field>
        <field name="category_id" ref="hr_payroll_categories_sancion_publica"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.sancion_public and inputs.sancion_public.amount:
    result = inputs.sancion_public.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.sancion_public and inputs.sancion_public.amount:
    result = inputs.sancion_public.amount</field>
    </record>

    <record id="hr_rule_san_priv" model="hr.salary.rule">
        <field name="name">Sanciones Privadas</field>
        <field name="sequence" eval="811"/>
        <field name="code">1138</field>
        <field name="rule_type">deducciones</field>
        <field name="category_id" ref="hr_payroll_categories_sancion_privadas"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.san_priv and inputs.san_priv.amount:
    result = inputs.san_priv.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.san_priv and inputs.san_priv.amount:
    result = inputs.san_priv.amount</field>
    </record>

    <record id="hr_rule_san_priv_ven" model="hr.salary.rule">
        <field name="name">Sanciones Privadas</field>
        <field name="sequence" eval="811"/>
        <field name="code">1138</field>
        <field name="rule_type">deducciones</field>
        <field name="category_id" ref="hr_payroll_categories_sancion_privadas"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.san_priv and inputs.san_priv.amount:
    result = inputs.san_priv.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.san_priv and inputs.san_priv.amount:
    result = inputs.san_priv.amount</field>
    </record>

    <record id="hr_rule_san_priv_ops" model="hr.salary.rule">
        <field name="name">Sanciones Privadas</field>
        <field name="sequence" eval="811"/>
        <field name="code">1138</field>
        <field name="rule_type">deducciones</field>
        <field name="category_id" ref="hr_payroll_categories_sancion_privadas"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.san_priv and inputs.san_priv.amount:
    result = inputs.san_priv.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.san_priv and inputs.san_priv.amount:
    result = inputs.san_priv.amount</field>
    </record>

    <record id="hr_rule_libranzas" model="hr.salary.rule">
        <field name="name">Libranzas 2</field>
        <field name="sequence" eval="812"/>
        <field name="code">1139</field>
        <field name="rule_type">deducciones</field>
        <field name="category_id" ref="hr_payroll_categories_libranza"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.libranzas and inputs.libranzas.amount:
    result = inputs.libranzas.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.libranzas and inputs.libranzas.amount:
    result = inputs.libranzas.amount</field>
    </record>

    <record id="hr_rule_libranzas_ven" model="hr.salary.rule">
        <field name="name">Libranzas 2</field>
        <field name="sequence" eval="812"/>
        <field name="code">1239</field>
        <field name="rule_type">deducciones</field>
        <field name="category_id" ref="hr_payroll_categories_libranza"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.libranzas and inputs.libranzas.amount:
    result = inputs.libranzas.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.libranzas and inputs.libranzas.amount:
    result = inputs.libranzas.amount</field>
    </record>

    <record id="hr_rule_libranzas_ops" model="hr.salary.rule">
        <field name="name">Libranzas 2</field>
        <field name="sequence" eval="812"/>
        <field name="code">1339</field>
        <field name="rule_type">deducciones</field>
        <field name="category_id" ref="hr_payroll_categories_libranza"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.libranzas and inputs.libranzas.amount:
    result = inputs.libranzas.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.libranzas and inputs.libranzas.amount:
    result = inputs.libranzas.amount</field>
    </record>

    <record id="hr_rule_pen_volu" model="hr.salary.rule">
        <field name="name">Pension voluntaria</field>
        <field name="sequence" eval="839"/>
        <field name="code">1141</field>
        <field name="rule_type">deducciones</field>
        <field name="category_id" ref="hr_payroll_categories_pension_volu"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.pen_volu and inputs.pen_volu.amount:
    result = inputs.pen_volu.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.pen_volu and inputs.pen_volu.amount:
    result = inputs.pen_volu.amount</field>
    </record>

    <record id="hr_rule_pen_volu_ven" model="hr.salary.rule">
        <field name="name">Pension voluntaria</field>
        <field name="sequence" eval="839"/>
        <field name="code">1241</field>
        <field name="rule_type">deducciones</field>
        <field name="category_id" ref="hr_payroll_categories_pension_volu"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.pen_volu and inputs.pen_volu.amount:
    result = inputs.pen_volu.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.pen_volu and inputs.pen_volu.amount:
    result = inputs.pen_volu.amount</field>
    </record>

    <record id="hr_rule_pen_volu_ops" model="hr.salary.rule">
        <field name="name">Pension voluntaria</field>
        <field name="sequence" eval="839"/>
        <field name="code">1241</field>
        <field name="rule_type">deducciones</field>
        <field name="category_id" ref="hr_payroll_categories_pension_volu"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.pen_volu and inputs.pen_volu.amount:
    result = inputs.pen_volu.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.pen_volu and inputs.pen_volu.amount:
    result = inputs.pen_volu.amount</field>
    </record>

    <record id="hr_rule_afc" model="hr.salary.rule">
        <field name="name">Ahorro Fomento a la construccion</field>
        <field name="sequence" eval="839"/>
        <field name="code">1142</field>
        <field name="rule_type">deducciones</field>
        <field name="category_id" ref="hr_payroll_categories_ahorro_afc"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.afc and inputs.afc.amount:
    result = inputs.afc.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.afc and inputs.afc.amount:
    result = inputs.afc.amount</field>
    </record>

    <record id="hr_rule_afc_ven" model="hr.salary.rule">
        <field name="name">Ahorro Fomento a la construccion</field>
        <field name="sequence" eval="839"/>
        <field name="code">1242</field>
        <field name="rule_type">deducciones</field>
        <field name="category_id" ref="hr_payroll_categories_ahorro_afc"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.afc and inputs.afc.amount:
    result = inputs.afc.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.afc and inputs.afc.amount:
    result = inputs.afc.amount</field>
    </record>

    <record id="hr_rule_afc_ops" model="hr.salary.rule">
        <field name="name">Ahorro Fomento a la construccion</field>
        <field name="sequence" eval="839"/>
        <field name="code">1342</field>
        <field name="rule_type">deducciones</field>
        <field name="category_id" ref="hr_payroll_categories_ahorro_afc"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.afc and inputs.afc.amount:
    result = inputs.afc.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.afc and inputs.afc.amount:
    result = inputs.afc.amount</field>
    </record>

    <record id="hr_rule_cooperativa" model="hr.salary.rule">
        <field name="name">Cooperativa</field>
        <field name="sequence" eval="842"/>
        <field name="code">1143</field>
        <field name="rule_type">deducciones</field>
        <field name="category_id" ref="hr_payroll_categories_coop"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.cooperativa and inputs.cooperativa.amount:
    result = inputs.cooperativa.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.cooperativa and inputs.cooperativa.amount:
    result = inputs.cooperativa.amount</field>
    </record>

    <record id="hr_rule_cooperativa_ven" model="hr.salary.rule">
        <field name="name">Cooperativa</field>
        <field name="sequence" eval="842"/>
        <field name="code">1243</field>
        <field name="rule_type">deducciones</field>
        <field name="category_id" ref="hr_payroll_categories_coop"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.cooperativa and inputs.cooperativa.amount:
    result = inputs.cooperativa.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.cooperativa and inputs.cooperativa.amount:
    result = inputs.cooperativa.amount</field>
    </record>

    <record id="hr_rule_cooperativa_ops" model="hr.salary.rule">
        <field name="name">Cooperativa</field>
        <field name="sequence" eval="842"/>
        <field name="code">1343</field>
        <field name="rule_type">deducciones</field>
        <field name="category_id" ref="hr_payroll_categories_coop"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.cooperativa and inputs.cooperativa.amount:
    result = inputs.cooperativa.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.cooperativa and inputs.cooperativa.amount:
    result = inputs.cooperativa.amount</field>
    </record>

    <record id="hr_rule_embargo_fis" model="hr.salary.rule">
        <field name="name">Embargo Fiscal</field>
        <field name="sequence" eval="843"/>
        <field name="code">1144</field>
        <field name="rule_type">deducciones</field>
        <field name="category_id" ref="hr_payroll_categories_embar_fiscal"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.embargo_fis and inputs.embargo_fis.amount:
    result = inputs.embargo_fis.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.embargo_fis and inputs.embargo_fis.amount:
    result = inputs.embargo_fis.amount</field>
    </record>

    <record id="hr_rule_embargo_fis_ven" model="hr.salary.rule">
        <field name="name">Embargo Fiscal</field>
        <field name="sequence" eval="843"/>
        <field name="code">1244</field>
        <field name="rule_type">deducciones</field>
        <field name="category_id" ref="hr_payroll_categories_embar_fiscal"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.embargo_fis and inputs.embargo_fis.amount:
    result = inputs.embargo_fis.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.embargo_fis and inputs.embargo_fis.amount:
    result = inputs.embargo_fis.amount</field>
    </record>

    <record id="hr_rule_embargo_fis_ops" model="hr.salary.rule">
        <field name="name">Embargo Fiscal</field>
        <field name="sequence" eval="843"/>
        <field name="code">1344</field>
        <field name="rule_type">deducciones</field>
        <field name="category_id" ref="hr_payroll_categories_embar_fiscal"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.embargo_fis and inputs.embargo_fis.amount:
    result = inputs.embargo_fis.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.embargo_fis and inputs.embargo_fis.amount:
    result = inputs.embargo_fis.amount</field>
    </record>

    <record id="hr_rule_planes_com" model="hr.salary.rule">
        <field name="name">Planes complementarios</field>
        <field name="sequence" eval="844"/>
        <field name="code">1145</field>
        <field name="rule_type">deducciones</field>
        <field name="category_id" ref="hr_payroll_categories_planes_comp"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.planes_com and inputs.planes_com.amount:
    result = inputs.planes_com.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.planes_com and inputs.planes_com.amount:
    result = inputs.planes_com.amount</field>
    </record>
    
    <record id="hr_rule_planes_com_ven" model="hr.salary.rule">
        <field name="name">Planes complementarios</field>
        <field name="sequence" eval="844"/>
        <field name="code">1245</field>
        <field name="rule_type">deducciones</field>
        <field name="category_id" ref="hr_payroll_categories_planes_comp"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.planes_com and inputs.planes_com.amount:
    result = inputs.planes_com.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.planes_com and inputs.planes_com.amount:
    result = inputs.planes_com.amount</field>
    </record>
<!--ACA-->
    <record id="hr_rule_planes_com_ops" model="hr.salary.rule">
        <field name="name">Planes complementarios</field>
        <field name="sequence" eval="844"/>
        <field name="code">1345</field>
        <field name="rule_type">deducciones</field>
        <field name="category_id" ref="hr_payroll_categories_planes_comp"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.planes_com and inputs.planes_com.amount:
    result = inputs.planes_com.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.planes_com and inputs.planes_com.amount:
    result = inputs.planes_com.amount</field>
    </record>

    <record id="hr_rule_educa" model="hr.salary.rule">
        <field name="name">Educación</field>
        <field name="sequence" eval="845"/>
        <field name="code">1146</field>
        <field name="rule_type">deducciones</field>
        <field name="category_id" ref="hr_payroll_categories_educacion"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.educa and inputs.educa.amount:
    result = inputs.educa.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.educa and inputs.educa.amount:
    result = inputs.educa.amount</field>
    </record>

    <record id="hr_rule_educa_ven" model="hr.salary.rule">
        <field name="name">Educación</field>
        <field name="sequence" eval="845"/>
        <field name="code">1246</field>
        <field name="rule_type">deducciones</field>
        <field name="category_id" ref="hr_payroll_categories_educacion"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.educa and inputs.educa.amount:
    result = inputs.educa.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.educa and inputs.educa.amount:
    result = inputs.educa.amount</field>
    </record>

    <record id="hr_rule_educa_ops" model="hr.salary.rule">
        <field name="name">Educación</field>
        <field name="sequence" eval="845"/>
        <field name="code">1346</field>
        <field name="rule_type">deducciones</field>
        <field name="category_id" ref="hr_payroll_categories_educacion"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.educa and inputs.educa.amount:
    result = inputs.educa.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.educa and inputs.educa.amount:
    result = inputs.educa.amount</field>
    </record>

    <record id="hr_rule_reint_dedu" model="hr.salary.rule">
        <field name="name">Reintegro Deducciones</field>
        <field name="sequence" eval="846"/>
        <field name="code">1147</field>
        <field name="rule_type">deducciones</field>
        <field name="category_id" ref="hr_payroll_categories_reintegro_dedu"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.reint_dedu and inputs.reint_dedu.amount:
    result = inputs.reint_dedu.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.reint_dedu and inputs.reint_dedu.amount:
    result = inputs.reint_dedu.amount</field>
    </record>

    <record id="hr_rule_reint_dedu_ven" model="hr.salary.rule">
        <field name="name">Reintegro Deducciones</field>
        <field name="sequence" eval="846"/>
        <field name="code">1247</field>
        <field name="rule_type">deducciones</field>
        <field name="category_id" ref="hr_payroll_categories_reintegro_dedu"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.reint_dedu and inputs.reint_dedu.amount:
    result = inputs.reint_dedu.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.reint_dedu and inputs.reint_dedu.amount:
    result = inputs.reint_dedu.amount</field>
    </record>

    <record id="hr_rule_reint_dedu_ops" model="hr.salary.rule">
        <field name="name">Reintegro Deducciones</field>
        <field name="sequence" eval="846"/>
        <field name="code">1347</field>
        <field name="rule_type">deducciones</field>
        <field name="category_id" ref="hr_payroll_categories_reintegro_dedu"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.reint_dedu and inputs.reint_dedu.amount:
    result = inputs.reint_dedu.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.reint_dedu and inputs.reint_dedu.amount:
    result = inputs.reint_dedu.amount</field>
    </record>

    <record id="hr_rule_libranza_adm" model="hr.salary.rule">
        <field name="name">Libranzas</field>
        <field name="sequence" eval="895"/>
        <field name="code">1135-1</field>
        <field name="rule_type">deducciones</field>
        <field name="category_id" ref="hr_payroll_categories_libranza"/>
        <field name="condition_select">python</field>
        <field name="condition_python">result = inputs.libranza and inputs.libranza.amount or False</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.libranza.amount
        </field>
    </record>

    <record id="hr_rule_libranza_ven" model="hr.salary.rule">
        <field name="name">Libranzas</field>
        <field name="sequence" eval="895"/>
        <field name="code">1235-1</field>
        <field name="rule_type">deducciones</field>
        <field name="category_id" ref="hr_payroll_categories_libranza"/>
        <field name="condition_select">python</field>
        <field name="condition_python">result = inputs.libranza and inputs.libranza.amount or False</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.libranza.amount
        </field>
    </record>

    <record id="hr_rule_libranza_ops" model="hr.salary.rule">
        <field name="name">Libranzas</field>
        <field name="sequence" eval="895"/>
        <field name="code">1335-1</field>
        <field name="rule_type">deducciones</field>
        <field name="category_id" ref="hr_payroll_categories_libranza"/>
        <field name="condition_select">python</field>
        <field name="condition_python">result = inputs.libranza and inputs.libranza.amount or False</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = inputs.libranza.amount</field>
    </record>

    <record id="hr_rule_sindicato" model="hr.salary.rule">
        <field name="name">Sindicato</field>
        <field name="sequence" eval="847"/>
        <field name="code">1148</field>
        <field name="rule_type">deducciones</field>
        <field name="category_id" ref="hr_payroll_categories_sindicato"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.sindicato and inputs.sindicato.amount:
    result = inputs.sindicato.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.sindicato and inputs.sindicato.amount:
    result = inputs.sindicato.amount</field>
    </record>

    <record id="hr_rule_sindicato_ven" model="hr.salary.rule">
        <field name="name">Sindicato</field>
        <field name="sequence" eval="847"/>
        <field name="code">1248</field>
        <field name="rule_type">deducciones</field>
        <field name="category_id" ref="hr_payroll_categories_sindicato"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.sindicato and inputs.sindicato.amount:
    result = inputs.sindicato.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.sindicato and inputs.sindicato.amount:
    result = inputs.sindicato.amount</field>
    </record>

    <record id="hr_rule_sindicato_ops" model="hr.salary.rule">
        <field name="name">Sindicato</field>
        <field name="sequence" eval="847"/>
        <field name="code">1348</field>
        <field name="rule_type">deducciones</field>
        <field name="category_id" ref="hr_payroll_categories_sindicato"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.sindicato and inputs.sindicato.amount:
    result = inputs.sindicato.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.sindicato and inputs.sindicato.amount:
    result = inputs.sindicato.amount</field>
    </record>

    <record id="hr_rule_anticipod" model="hr.salary.rule">
        <field name="name">Anticipos</field>
        <field name="sequence" eval="175"/>
        <field name="code">1149</field>
        <field name="rule_type">deducciones</field>
        <field name="category_id" ref="hr_payroll_categories_anticipod"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.anticipo and inputs.anticipo.amount:
    result = inputs.anticipo.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.anticipo and inputs.anticipo.amount:
    result = inputs.anticipo.amount</field>
    </record>

    <record id="hr_rule_anticipod_ven" model="hr.salary.rule">
        <field name="name">Anticipos</field>
        <field name="sequence" eval="175"/>
        <field name="code">1249</field>
        <field name="rule_type">deducciones</field>
        <field name="category_id" ref="hr_payroll_categories_anticipod"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.anticipo and inputs.anticipo.amount:
    result = inputs.anticipo.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.anticipo and inputs.anticipo.amount:
    result = inputs.anticipo.amount</field>
    </record>

    <record id="hr_rule_anticipod_ops" model="hr.salary.rule">
        <field name="name">Anticipos</field>
        <field name="sequence" eval="175"/>
        <field name="code">1349</field>
        <field name="rule_type">deducciones</field>
        <field name="category_id" ref="hr_payroll_categories_anticipod"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.anticipo and inputs.anticipo.amount:
    result = inputs.anticipo.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.anticipo and inputs.anticipo.amount:
    result = inputs.anticipo.amount</field>
    </record>

    <record id="hr_rule_deuda" model="hr.salary.rule">
        <field name="name">Deudas</field>
        <field name="sequence" eval="849"/>
        <field name="code">1150</field>
        <field name="rule_type">deducciones</field>
        <field name="category_id" ref="hr_payroll_categories_deuda"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.deuda and inputs.deuda.amount:
    result = inputs.deuda.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.deuda and inputs.deuda.amount:
    result = inputs.deuda.amount</field>
    </record>

    <record id="hr_rule_deuda_ven" model="hr.salary.rule">
        <field name="name">Deudas</field>
        <field name="sequence" eval="849"/>
        <field name="code">1250</field>
        <field name="rule_type">deducciones</field>
        <field name="category_id" ref="hr_payroll_categories_deuda"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.deuda and inputs.deuda.amount:
    result = inputs.deuda.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.deuda and inputs.deuda.amount:
    result = inputs.deuda.amount</field>
    </record>

    <record id="hr_rule_deuda_ops" model="hr.salary.rule">
        <field name="name">Deudas</field>
        <field name="sequence" eval="849"/>
        <field name="code">1350</field>
        <field name="rule_type">deducciones</field>
        <field name="category_id" ref="hr_payroll_categories_deuda"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.deuda and inputs.deuda.amount:
    result = inputs.deuda.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.deuda and inputs.deuda.amount:
    result = inputs.deuda.amount</field>
    </record>

    <record id="hr_rule_vac_ded_adm" model="hr.salary.rule">
        <field name="name">Deduccion de Vacaciones (Otros periodos)</field>
        <field name="sequence" eval="890"/>
        <field name="code">1116-7</field>
        <field name="rule_type">deducciones</field>
        <field name="category_id" ref="hr_payroll_categories_otras_ded"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.vac_ded and inputs.vac_ded.amount:
    result = inputs.vac_ded.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.vac_ded and inputs.vac_ded.amount:
    result = inputs.vac_ded.amount</field>
    </record>

    <record id="hr_rule_vac_ded_ven" model="hr.salary.rule">
        <field name="name">Deduccion de Vacaciones (Otros periodos)</field>
        <field name="sequence" eval="890"/>
        <field name="code">1216-7</field>
        <field name="rule_type">deducciones</field>
        <field name="category_id" ref="hr_payroll_categories_otras_ded"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.vac_ded and inputs.vac_ded.amount:
    result = inputs.vac_ded.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.vac_ded and inputs.vac_ded.amount:
    result = inputs.vac_ded.amount</field>
    </record>

    <record id="hr_rule_vac_ded_ops" model="hr.salary.rule">
        <field name="name">Deduccion de Vacaciones (Otros periodos)</field>
        <field name="sequence" eval="890"/>
        <field name="code">1316-7</field>
        <field name="rule_type">deducciones</field>
        <field name="category_id" ref="hr_payroll_categories_otras_ded"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.vac_ded and inputs.vac_ded.amount:
    result = inputs.vac_ded.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.vac_ded and inputs.vac_ded.amount:
    result = inputs.vac_ded.amount</field>
    </record>

    <record id="hr_rule_oded_adm" model="hr.salary.rule">
        <field name="name">Otras Deducciones</field>
        <field name="sequence" eval="890"/>
        <field name="code">1130-1</field>
        <field name="rule_type">deducciones</field>
        <field name="category_id" ref="hr_payroll_categories_otras_ded"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.oded and inputs.oded.amount:
    result = inputs.oded.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.oded and inputs.oded.amount:
    result = inputs.oded.amount</field>
    </record>

    <record id="hr_rule_oded_ven" model="hr.salary.rule">
        <field name="name">Otras Deducciones</field>
        <field name="sequence" eval="890"/>
        <field name="code">1230-1</field>
        <field name="rule_type">deducciones</field>
        <field name="category_id" ref="hr_payroll_categories_otras_ded"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.oded and inputs.oded.amount:
    result = inputs.oded.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.oded and inputs.oded.amount:
    result = inputs.oded.amount</field>
    </record>

    <record id="hr_rule_oded_ops" model="hr.salary.rule">
        <field name="name">Otras Deducciones</field>
        <field name="sequence" eval="890"/>
        <field name="code">1330-1</field>
        <field name="rule_type">deducciones</field>
        <field name="category_id" ref="hr_payroll_categories_otras_ded"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.oded and inputs.oded.amount:
    result = inputs.oded.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.oded and inputs.oded.amount:
    result = inputs.oded.amount</field>
    </record>

    <!--Totales-->
        <record id="hr_rule_total_Horas_extras" model="hr.salary.rule">
            <field name="name">Total Horas extras</field>
            <field name="sequence" eval="207"/>
            <field name="code">1401</field>
            <field name="rule_type">none</field>
            <field name="category_id" ref="hr_payroll_categorie_total_horas_extras"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = categories.HORAS_EXTRAS &gt; 0</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = categories.HORAS_EXTRAS</field>
        </record>

        <record id="hr_rule_total_devengado" model="hr.salary.rule">
            <field name="name">Total devengado</field>
            <field name="sequence" eval="713"/>
            <field name="code">1402</field>
            <field name="rule_type">none</field>
            <field name="category_id" ref="hr_payroll_categories_DEVE"/>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">total_dev = categories.ALW + categories.SUELDO + categories.HORAS_EXTRAS + categories.bono + categories.bono_ns + categories.vac + categories.ALW  + categories.AUX_TRANSPORTE + categories.inc + categories.com + categories.rod + categories.rod_ns + categories.luto  + categories.ajs + categories.sbf + categories.pprim + categories.indem + categories.dotac + categories.aus_rem + categories.concepto_s + categories.odev_nsal + categories.reintegro + categories.teletrabajo + categories.bon_retiro + categories.apoyo_sos + categories.compensaciones_e + categories.compensaciones_o + categories.auxilio_ns + categories.auxilio_s + categories.odev
if payslip.is_liquid and payslip.date_from.month == 1:
    result = total_dev + (categories.cesan + categories.cesan_info) + (categories.intcesan + categories.intcesan_info)
elif payslip.is_liquid :
    result = total_dev + categories.cesan + categories.intcesan
elif payslip.date_from.month == 1:
    result = total_dev + categories.intcesan_info
else:
    result = total_dev</field>
        </record>

    <record id="hr_rule_total_inc" model="hr.salary.rule">
        <field name="name">Total Licencias e Incapacidades</field>
        <field name="sequence" eval="515"/>
        <field name="code">1403</field>
        <field name="rule_type">none</field>
        <field name="category_id" ref="hr_payroll_total_inc_li"/>
        <field name="condition_select">python</field>            
        <field name="condition_python">if categories.inc != 0:
    result = categories.inc</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = categories.inc</field>
    </record>

    <record id="hr_rule_TOTAL_DEDUCCIONES" model="hr.salary.rule">
        <field name="name">Total deducciones</field>
        <field name="sequence" eval="900"/>
        <field name="code">1404</field>
        <field name="rule_type">none</field>
        <field name="category_id" ref="hr_payroll_categories_DED"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = categories.SAL + categories.PEN + categories.FSP + categories.RETEfuente+categories.apen+categories.des+categories.DED + categories.reintegro_dedu + categories.educacion  + categories.planes_com + categories.embar_fiscal + categories.coop + categories.ahorro_afc + categories.pension_volu + categories.sancion_privadas + categories.sancion_publica + categories.pag_ter + categories.libranza + categories.pagterc + categories.deuda + categories.otras_ded</field>
    </record>

    <record id="hr_rule_TOTAL" model="hr.salary.rule">
        <field name="name">Total</field>
        <field name="sequence" eval="950"/>
        <field name="code">1405</field>
        <field name="rule_type">none</field>
        <field name="category_id" ref="hr_payroll_categories_total"/>
        <field name="condition_select">none</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = categories.DEVE - categories.TOTAL_DEDUCCIONES</field>
    </record>
<!-- up1/7/21-->
        <record id="hr_rule_total_caja_com_adm" model="hr.salary.rule">
            <field name="name">Caja de compensación</field>
            <field name="sequence" eval="1010"/>
            <field name="code">1108</field>
            <field name="rule_type">none</field>
            <field name="category_id" ref="hr_payroll_cdc"/>
            <field name="register_id" ref="contrib_register_ccf"/>
            <field name="condition_select">python</field>
            <field name="condition_python">if payslip.date_from.day &gt; 15 or payslip.date_to.day in (28, 29, 30, 31) or payslip.is_liquid == True:
    if contract.contract_type == "4":
        result = False
    else:
        result = True</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = round(contract.calculate_caja_comp(categories, payslip))</field>
        </record>

        <record id="hr_rule_total_caja_com_ven" model="hr.salary.rule">
            <field name="name">Caja de compensación</field>
            <field name="sequence" eval="1010"/>
            <field name="code">1208</field>
            <field name="rule_type">none</field>
            <field name="category_id" ref="hr_payroll_cdc"/>
            <field name="register_id" ref="contrib_register_ccf"/>
            <field name="condition_select">python</field>
            <field name="condition_python">if payslip.date_from.day &gt; 15 or payslip.date_to.day in (28, 29, 30, 31) or payslip.is_liquid == True:
    if contract.contract_type == "4":
        result = False
    else:
        result = True</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = round(contract.calculate_caja_comp(categories, payslip))</field>
        </record>

        <record id="hr_rule_total_caja_com_ops" model="hr.salary.rule">
            <field name="name">Caja de compensación</field>
            <field name="sequence" eval="1010"/>
            <field name="code">1308</field>
            <field name="rule_type">none</field>
            <field name="category_id" ref="hr_payroll_cdc"/>
            <field name="register_id" ref="contrib_register_ccf"/>
            <field name="condition_select">python</field>
            <field name="condition_python">if payslip.date_from.day &gt; 15 or payslip.date_to.day in (28, 29, 30, 31) or payslip.is_liquid == True:
    if contract.contract_type == "4":
        result = False
    else:
        result = True</field>
            <field name="amount_python_compute">result = round(contract.calculate_caja_comp(categories, payslip))</field>
        </record>

        <record id="hr_rule_total_icbf" model="hr.salary.rule">
            <field name="name">ICBF</field>
            <field name="sequence" eval="1020"/>
            <field name="code">1108-2</field>
            <field name="rule_type">none</field>
            <field name="category_id" ref="hr_payroll_cdc"/>
            <field name='register_id' ref='contrib_register_icbf'/>
            <field name="condition_select">python</field>
            <field name="condition_python">previus_bweek = contract.get_last_biweek(payslip, ["base_p"])
if payslip.date_from.day &gt; 15 or payslip.date_to.day in (28, 29, 30, 31) or payslip.is_liquid == True:
    if (categories.base_p + previus_bweek) &gt;= (10*employee.company.salario_minimo):
        result = True
    else:
        result = False</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">previus_bweek = contract.get_last_biweek(payslip, ["base_p"])
result = round(contract.roundup_cent((categories.base_p + previus_bweek) * 0.03))</field>
        </record>

        <record id="hr_rule_total_icbf_ven" model="hr.salary.rule">
            <field name="name">ICBF</field>
            <field name="sequence" eval="1020"/>
            <field name="code">1208-2</field>
            <field name="rule_type">none</field>
            <field name="category_id" ref="hr_payroll_cdc"/>
            <field name='register_id' ref='contrib_register_icbf'/>
            <field name="condition_select">python</field>
            <field name="condition_python">previus_bweek = contract.get_last_biweek(payslip, ["base_p"])
if payslip.date_from.day &gt; 15 or payslip.date_to.day in (28, 29, 30, 31) or payslip.is_liquid == True:
    if (categories.base_p + previus_bweek) &gt;= (10*employee.company.salario_minimo):
        result = True
    else:
        result = False</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">previus_bweek = contract.get_last_biweek(payslip, ["base_p"])
result = round(contract.roundup_cent((categories.base_p + previus_bweek) * 0.03))</field>
        </record>

        <record id="hr_rule_total_icbf_ops" model="hr.salary.rule">
            <field name="name">ICBF</field>
            <field name="sequence" eval="1020"/>
            <field name="code">1308-2</field>
            <field name="rule_type">none</field>
            <field name="category_id" ref="hr_payroll_cdc"/>
            <field name='register_id' ref='contrib_register_icbf'/>
            <field name="condition_select">python</field>
            <field name="condition_python">previus_bweek = contract.get_last_biweek(payslip, ["base_p"])
if payslip.date_from.day &gt; 15 or payslip.date_to.day in (28, 29, 30, 31) or payslip.is_liquid == True:
    if (categories.base_p + previus_bweek) &gt;= (10*employee.company.salario_minimo):
        result = True
    else:
        result = False</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">previus_bweek = contract.get_last_biweek(payslip, ["base_p"])
result = round(contract.roundup_cent((categories.base_p + previus_bweek) * 0.03))</field>
        </record>

        <record id="hr_rule_total_sena" model="hr.salary.rule">
            <field name="name">SENA</field>
            <field name="sequence" eval="1030"/>
            <field name="code">1108-3</field>
            <field name="rule_type">none</field>
            <field name="category_id" ref="hr_payroll_cdc"/>
            <field name='register_id' ref='contrib_register_sena'/>
            <field name="condition_select">python</field>
            <field name="condition_python">previus_bweek = contract.get_last_biweek(payslip, ["base_p"])
if payslip.date_from.day &gt; 15 or payslip.date_to.day in (28, 29, 30, 31) or payslip.is_liquid == True:
    if (categories.base_p + previus_bweek) &gt;= (10*employee.company.salario_minimo):
        result = True
    else:
        result = False</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">previus_bweek = contract.get_last_biweek(payslip, ["base_p"])
result = round(contract.roundup_cent((categories.base_p + previus_bweek) * 0.02))</field>
        </record>

        <record id="hr_rule_total_sena_ven" model="hr.salary.rule">
            <field name="name">SENA</field>
            <field name="sequence" eval="1030"/>
            <field name="code">1208-3</field>
            <field name="rule_type">none</field>
            <field name="category_id" ref="hr_payroll_cdc"/>
            <field name='register_id' ref='contrib_register_sena'/>
            <field name="condition_select">python</field>
            <field name="condition_python">previus_bweek = contract.get_last_biweek(payslip, ["base_p"])
if payslip.date_from.day &gt; 15 or payslip.date_to.day in (28, 29, 30, 31) or payslip.is_liquid == True:
    if (categories.base_p + previus_bweek) &gt;= (10*employee.company.salario_minimo):
        result = True
    else:
        result = False</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">previus_bweek = contract.get_last_biweek(payslip, ["base_p"])
result = round(contract.roundup_cent((categories.base_p + previus_bweek) * 0.02))</field>
        </record>

        <record id="hr_rule_total_sena_ops" model="hr.salary.rule">
            <field name="name">SENA</field>
            <field name="sequence" eval="1030"/>
            <field name="code">1308-3</field>
            <field name="rule_type">none</field>
            <field name="category_id" ref="hr_payroll_cdc"/>
            <field name='register_id' ref='contrib_register_sena'/>
            <field name="condition_select">python</field>
            <field name="condition_python">previus_bweek = contract.get_last_biweek(payslip, ["base_p"])
if payslip.date_from.day &gt; 15 or payslip.date_to.day in (28, 29, 30, 31) or payslip.is_liquid == True:
    if (categories.base_p + previus_bweek) &gt;= (10*employee.company.salario_minimo):
        result = True
    else:
        result = False</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">previus_bweek = contract.get_last_biweek(payslip, ["base_p"])
result = round(contract.roundup_cent((categories.base_p + previus_bweek) * 0.02))</field>
        </record>

        <!--Provisiones -->
        <record id="hr_rule_provi_vac_adm" model="hr.salary.rule">
            <field name="name">Provisión Vacaciones</field>
            <field name="sequence" eval="704"/>
            <field name="code">1117</field>
            <field name="rule_type">none</field>            
            <field name="category_id" ref="hr_payroll_pro_vac"/>
            <field name="condition_select">python</field>
            <field name="condition_python">if contract.contract_type == "4":
    result = False
else:
    result = True</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">active_days=contract.calculate_active_days(payslip)
if contract.variable_wage:
    result = round(categories.base_p * (30/360/2))
else:
    result = round(contract.get_wage_for_period(payslip.date_from) * active_days / 720)</field>
        </record>

        <record id="hr_rule_provi_vac_ven" model="hr.salary.rule">
            <field name="name">Provisión Vacaciones</field>
            <field name="sequence" eval="704"/>
            <field name="code">1217</field>
            <field name="rule_type">none</field>
            <field name="category_id" ref="hr_payroll_pro_vac"/>
            <field name="condition_select">python</field>
            <field name="condition_python">if contract.contract_type == "4":
    result = False
else:
    result = True</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">active_days=contract.calculate_active_days(payslip)
if contract.variable_wage:
    result = round(categories.base_p * (30/360/2))
else:
    result = round(contract.get_wage_for_period(payslip.date_from) * active_days / 720)</field>
        </record>

        <record id="hr_rule_provi_vac_ops" model="hr.salary.rule">
            <field name="name">Provisión Vacaciones</field>
            <field name="sequence" eval="704"/>
            <field name="code">1317</field>
            <field name="rule_type">none</field>
            <field name="category_id" ref="hr_payroll_pro_vac"/>
            <field name="condition_select">python</field>
            <field name="condition_python">if contract.contract_type == "4":
    result = False
else:
    result = True</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">active_days=contract.calculate_active_days(payslip)
if contract.variable_wage:
    result = round(categories.base_p * (30/360/2))
else:
    result = round(contract.get_wage_for_period(payslip.date_from) * active_days / 720)</field>
        </record>

        <record id="hr_rule_pro_prima_adm" model="hr.salary.rule">
            <field name="name">Provisión Prima de Servicio</field>
            <field name="sequence" eval="700"/>
            <field name="code">1109</field>
            <field name="rule_type">none</field>
            <field name="category_id" ref="hr_payroll_pro_pri"/>
            <field name="condition_select">python</field>
            <field name="condition_python">flag = False
for lines in contract.prima_acumuladas_ids:
    if lines.fecha_pago_nomina:
        if payslip.date_from.month == lines.fecha_pago_nomina.month and payslip.date_from.year== lines.fecha_pago_nomina.year:
            flag = True
            break
if contract.contract_type == "4" or flag or contract.variable_wage:
    result = False
elif payslip.date_to.day in (28, 29, 30 ,31) or payslip.is_liquid:
    result = True
            </field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = contract.calculate_prima_prov(categories, payslip)</field>
        </record>

<record id="hr_rule_pro_prima_ven" model="hr.salary.rule">
            <field name="name">Provisión Prima de Servicio</field>
            <field name="sequence" eval="700"/>
            <field name="code">1209</field>
            <field name="rule_type">none</field>
            <field name="category_id" ref="hr_payroll_pro_pri"/>
            <field name="condition_select">python</field>
            <field name="condition_python">flag = False
for lines in contract.prima_acumuladas_ids:
    if lines.fecha_pago_nomina:
        if payslip.date_from.month == lines.fecha_pago_nomina.month and payslip.date_from.year== lines.fecha_pago_nomina.year:
            flag = True
            break
if contract.contract_type == "4" or flag or contract.variable_wage:
    result = False
elif payslip.date_to.day in (28, 29, 30 ,31) or payslip.is_liquid:
    result = True</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = contract.calculate_prima_prov(categories, payslip)</field>
        </record>

<record id="hr_rule_pro_prima_ops" model="hr.salary.rule">
            <field name="name">Provisión Prima de Servicio</field>
            <field name="sequence" eval="700"/>
            <field name="code">1309</field>
            <field name="rule_type">none</field>
            <field name="category_id" ref="hr_payroll_pro_pri"/>
            <field name="condition_select">python</field>
            <field name="condition_python">flag = False
for lines in contract.prima_acumuladas_ids:
    if lines.fecha_pago_nomina:
        if payslip.date_from.month == lines.fecha_pago_nomina.month and payslip.date_from.year== lines.fecha_pago_nomina.year:
            flag = True
            break
if contract.contract_type == "4" or flag or contract.variable_wage:
    result = False
elif payslip.date_to.day in (28, 29, 30 ,31) or payslip.is_liquid:
    result = True</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = contract.calculate_prima_prov(categories, payslip)</field>
        </record>

        <record id="hr_rule_pro_ARL_adm" model="hr.salary.rule">
            <field name="name">ARL</field>
            <field name="sequence" eval="1000"/>
            <field name="code">1110</field>
            <field name="rule_type">none</field>
            <field name="category_id" ref="hr_payroll_ARL_p"/>
            <field name='register_id' ref='contrib_register_arl'/>
            <field name="condition_select">python</field>
            <field name="condition_python">if payslip.date_from.day &gt; 15 or payslip.date_to.day in (28, 29, 30, 31) or payslip.is_liquid == True:
    if contract.contract_type == "4":
        if contract.phase == "teaching_phase":
            result = False
        elif contract.phase == "practical_phase":
            result = True
        else:
            result = True
    else:
        result = True</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">contract.calculate_arl(categories, payslip)</field>
        </record>

        <record id="hr_rule_pro_ARL_ven" model="hr.salary.rule">
            <field name="name">ARL</field>
            <field name="sequence" eval="1000"/>
            <field name="code">1210</field>
            <field name="rule_type">none</field>
            <field name="category_id" ref="hr_payroll_ARL_p"/>
            <field name='register_id' ref='contrib_register_arl'/>
            <field name="condition_select">python</field>
            <field name="condition_python">if payslip.date_from.day &gt; 15 or payslip.date_to.day in (28, 29, 30, 31) or payslip.is_liquid == True:
    if contract.contract_type == "4":
        if contract.phase == "teaching_phase":
            result = False
        elif contract.phase == "practical_phase":
            result = True
        else:
            result = True
    else:
        result = True</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">contract.calculate_arl(categories, payslip)</field>
        </record>

        <record id="hr_rule_pro_ARL_ops" model="hr.salary.rule">
            <field name="name">ARL</field>
            <field name="sequence" eval="1000"/>
            <field name="code">1310</field>
            <field name="rule_type">none</field>
            <field name="category_id" ref="hr_payroll_ARL_p"/>
            <field name='register_id' ref='contrib_register_arl'/>
            <field name="condition_select">python</field>
            <field name="condition_python">if payslip.date_from.day &gt; 15 or payslip.date_to.day in (28, 29, 30, 31) or payslip.is_liquid == True:
    if contract.contract_type == "4":
        if contract.phase == "teaching_phase":
            result = False
        elif contract.phase == "practical_phase":
            result = True
        else:
            result = True
    else:
        result = True</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">contract.calculate_arl(categories, payslip)</field>
        </record>

        <record id="hr_rule_pro_cesa" model="hr.salary.rule">
            <field name="name">Provisión Cesantias</field>
            <field name="sequence" eval="702"/>
            <field name="code">1111</field>
            <field name="rule_type">none</field>
            <field name="category_id" ref="hr_payroll_pro_ces"/>
            <field name="condition_select">python</field>
            <field name="condition_python">if contract.contract_type == "4" or contract.variable_wage:
    result = False
elif payslip.date_to.day in (28, 29, 30 ,31) or payslip.is_liquid:
    result = True</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = round(contract.calculate_cesantias_prov(categories, payslip))</field>
        </record>

        <record id="hr_rule_pro_cesa_ven" model="hr.salary.rule">
            <field name="name">Provisión Cesantias</field>
            <field name="sequence" eval="702"/>
            <field name="code">1211</field>
            <field name="rule_type">none</field>
            <field name="category_id" ref="hr_payroll_pro_ces"/>
            <field name="condition_select">python</field>
            <field name="condition_python">if contract.contract_type == "4" or contract.variable_wage:
    result = False
elif payslip.date_to.day in (28, 29, 30 ,31) or payslip.is_liquid:
    result = True</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = round(contract.calculate_cesantias_prov(categories, payslip))</field>
        </record>

        <record id="hr_rule_pro_cesa_ops" model="hr.salary.rule">
            <field name="name">Provisión Cesantias</field>
            <field name="sequence" eval="702"/>
            <field name="code">1311</field>
            <field name="rule_type">none</field>
            <field name="category_id" ref="hr_payroll_pro_ces"/>
            <field name="condition_select">python</field>
            <field name="condition_python">if contract.contract_type == "4" or contract.variable_wage:
    result = False
elif payslip.date_to.day in (28, 29, 30 ,31) or payslip.is_liquid:
    result = True</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = round(contract.calculate_cesantias_prov(categories, payslip))</field>
        </record>

        <record id="hr_rule_pro_incesa_adm" model="hr.salary.rule">
            <field name="name">Provisión Interes Cesantias</field>
            <field name="sequence" eval="703"/>
            <field name="code">1112</field>
            <field name="rule_type">none</field>
            <field name="category_id" ref="hr_payroll_pro_in_ces"/>
            <field name="condition_select">python</field>
            <field name="condition_python">if contract.contract_type == "4" or contract.variable_wage:
    result = False
elif payslip.date_to.day in (28, 29, 30 ,31) or payslip.is_liquid:
    result = True</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">pcesa = categories.pcesan
result = round(contract.prov_int_ces(payslip, pcesa))</field>
        </record>

        <record id="hr_rule_pro_incesa_ven" model="hr.salary.rule">
            <field name="name">Provisión Interes Cesantias</field>
            <field name="sequence" eval="703"/>
            <field name="code">1212</field>
            <field name="rule_type">none</field>
            <field name="category_id" ref="hr_payroll_pro_in_ces"/>
            <field name="condition_select">python</field>
            <field name="condition_python">if contract.contract_type == "4" or contract.variable_wage:
    result = False
elif payslip.date_to.day in (28, 29, 30 ,31) or payslip.is_liquid:
    result = True</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">pcesa = categories.pcesan
result = round(contract.prov_int_ces(payslip, pcesa))</field>
        </record>

        <record id="hr_rule_pro_incesa_ops" model="hr.salary.rule">
            <field name="name">Provisión Interes Cesantias</field>
            <field name="sequence" eval="703"/>
            <field name="code">1312</field>
            <field name="rule_type">none</field>
            <field name="category_id" ref="hr_payroll_pro_in_ces"/>
            <field name="condition_select">python</field>
            <field name="condition_python">if contract.contract_type == "4" or contract.variable_wage:
    result = False
elif payslip.date_to.day in (28, 29, 30 ,31) or payslip.is_liquid:
    result = True</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">pcesa = categories.pcesan
result = round(contract.prov_int_ces(payslip, pcesa))</field>
        </record>

        <record id="hr_rule_sal_emp_adm" model="hr.salary.rule">
            <field name="name">Salud Empresa</field>
            <field name="sequence" eval="1035"/>
            <field name="code">1113</field>
            <field name="rule_type">none</field>
            <field name="category_id" ref="hr_payroll_sal_emp"/>
            <field name='register_id' ref='contrib_register_eps'/>
            <field name="condition_select">python</field>
            <field name="condition_python">previus_bweek = contract.get_last_biweek(payslip, ["base_p"])
IBC = categories.base_p + previus_bweek
if payslip.date_to.day in (28, 29, 30, 31) :
    if IBC &gt;= (10*employee.company.salario_minimo) or contract.contract_type == "4" or employee.employee_type == "02":
        result = True
elif payslip.is_liquid == True and (IBC &gt;= (10*employee.company.salario_minimo) or contract.contract_type == "4" or employee.employee_type == "02"):
    result = True
else:
    result = False</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">previous_bweek = contract.get_last_biweek(payslip, ["base_p"])
IBC = categories.base_p + previous_bweek
if contract.contract_type == "4":
    result = round(employee.company.salario_minimo * 0.125)
elif employee.employee_type == "02":
    result = round(IBC * 0.04)
elif IBC &gt; (25 * employee.company.salario_minimo):
    result = (25 * employee.company.salario_minimo) * 0.085
else :
    result = round(IBC * 0.085)</field>
        </record>

        <record id="hr_rule_sal_emp_ven" model="hr.salary.rule">
            <field name="name">Salud Empresa</field>
            <field name="sequence" eval="1035"/>
            <field name="code">1213</field>
            <field name="rule_type">none</field>
            <field name="category_id" ref="hr_payroll_sal_emp"/>
            <field name='register_id' ref='contrib_register_eps'/>
            <field name="condition_select">python</field>
            <field name="condition_python">previus_bweek = contract.get_last_biweek(payslip, ["base_p"])
IBC = categories.base_p + previus_bweek
if payslip.date_to.day in (28, 29, 30, 31) :
    if IBC &gt;= (10*employee.company.salario_minimo) or contract.contract_type == "4" or employee.employee_type == "02":
        result = True
elif payslip.is_liquid == True and (IBC &gt;= (10*employee.company.salario_minimo) or contract.contract_type == "4" or employee.employee_type == "02"):
    result = True
else:
    result = False</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">previous_bweek = contract.get_last_biweek(payslip, ["base_p"])
IBC = categories.base_p + previous_bweek
if contract.contract_type == "4":
    result = round(employee.company.salario_minimo * 0.125)
elif employee.employee_type == "02":
    result = round(IBC * 0.04)
elif IBC &gt; (25 * employee.company.salario_minimo):
    result = (25 * employee.company.salario_minimo) * 0.085
else :
    result = round(IBC * 0.085)</field>
        </record>

        <record id="hr_rule_sal_emp_ops" model="hr.salary.rule">
            <field name="name">Salud Empresa</field>
            <field name="sequence" eval="1035"/>
            <field name="code">1313</field>
            <field name="rule_type">none</field>
            <field name="category_id" ref="hr_payroll_sal_emp"/>
            <field name='register_id' ref='contrib_register_eps'/>
            <field name="condition_select">python</field>
            <field name="condition_python">previus_bweek = contract.get_last_biweek(payslip, ["base_p"])
IBC = categories.base_p + previus_bweek
if payslip.date_to.day in (28, 29, 30, 31) :
    if IBC &gt;= (10*employee.company.salario_minimo) or contract.contract_type == "4" or employee.employee_type == "02":
        result = True
elif payslip.is_liquid == True and (IBC &gt;= (10*employee.company.salario_minimo) or contract.contract_type == "4" or employee.employee_type == "02"):
    result = True
else:
    result = False</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">previous_bweek = contract.get_last_biweek(payslip, ["base_p"])
IBC = categories.base_p + previous_bweek
if contract.contract_type == "4":
    result = round(employee.company.salario_minimo * 0.125)
elif employee.employee_type == "02":
    result = round(IBC * 0.04)
elif IBC &gt; (25 * employee.company.salario_minimo):
    result = (25 * employee.company.salario_minimo) * 0.085
else :
    result = round(IBC * 0.085)</field>
        </record>

<record id="hr_rule_aporte_pension_empresa_adm" model="hr.salary.rule">
            <field name="name">Aporte Pensión Empresa</field>
            <field name="sequence" eval="1021"/>
            <field name="code">1114</field>
            <field name="rule_type">none</field>
            <!--field name="dont_show_in_report">False</field-->
            <field name="category_id" ref="hr_payroll_aporte_pen_empr"/>
            <field name='register_id' ref='contrib_register_pension'/>
            <field name="condition_select">python</field>
            <field name="condition_python">if contract.contract_type == "4":
    result = False
elif worked_days.AUSENCIA_NO_REMUNERADO or contract.get_last_biweek_days_nw(payslip):
    if payslip.date_to.day in (28, 29, 30, 31) or payslip.is_liquid == True:
        result = True
    else:
        result = False
else:
    result= False</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">worked_days_dict = contract.worked_days_dict(payslip)
previous_IBC = contract.get_last_biweek(payslip, ["base_p"])
previous_days = contract.get_last_biweek_days(payslip)
total_days=contract.calculate_active_days(payslip)
if previous_days != 0: # Si trabajó mas de un dia
    if previous_IBC / previous_days &lt; employee.company.salario_minimo/30:
        previous_amount = employee.company.salario_minimo / 30 * previous_days
    else:
        previous_amount = previous_IBC
else:
    previous_amount = contract.get_wage_for_period(payslip.date_from) / 30 * contract.get_last_biweek_days_nw(payslip)
if total_days != 0:
    if categories.base_p / total_days &lt; employee.company.salario_minimo/30:
        actual_amount = employee.company.salario_minimo / 30 * total_days
    else:
        actual_amount = categories.base_p
    result = round((previous_amount + actual_amount) / 30 * worked_days_dict.get('AUSENCIA_NO_REMUNERADO', 0) * 0.12)
else:
    actual_amount = contract.get_wage_for_period(payslip.date_from) / 30 * worked_days_dict.get('AUSENCIA_NO_REMUNERADO', 0)
    result = contract.roundup_cent((previous_amount + actual_amount) * 0.12)</field>
        </record>

    <record id="hr_rule_aporte_pension_empresa_ven" model="hr.salary.rule">
            <field name="name">Aporte Pensión Empresa</field>
            <field name="sequence" eval="1021"/>
            <field name="code">1214</field>
            <field name="rule_type">none</field>
            <!--field name="dont_show_in_report">False</field-->
            <field name="category_id" ref="hr_payroll_aporte_pen_empr"/>
            <field name='register_id' ref='contrib_register_pension'/>
            <field name="condition_select">python</field>
            <field name="condition_python">if contract.contract_type == "4":
    result = False
elif worked_days.AUSENCIA_NO_REMUNERADO or contract.get_last_biweek_days_nw(payslip):
    if payslip.date_to.day in (28, 29, 30, 31) or payslip.is_liquid == True:
        result = True
    else:
        result = False
else:
    result= False</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">worked_days_dict = contract.worked_days_dict(payslip)
previous_IBC = contract.get_last_biweek(payslip, ["base_p"])
previous_days = contract.get_last_biweek_days(payslip)
total_days=contract.calculate_active_days(payslip)
if previous_days != 0: # Si trabajó mas de un dia
    if previous_IBC / previous_days &lt; employee.company.salario_minimo/30:
        previous_amount = employee.company.salario_minimo / 30 * previous_days
    else:
        previous_amount = previous_IBC
else:
    previous_amount = contract.get_wage_for_period(payslip.date_from) / 30 * contract.get_last_biweek_days_nw(payslip)
if total_days != 0:
    if categories.base_p / total_days &lt; employee.company.salario_minimo/30:
        actual_amount = employee.company.salario_minimo / 30 * total_days
    else:
        actual_amount = categories.base_p
    result = round((previous_amount + actual_amount) / 30 * worked_days_dict.get('AUSENCIA_NO_REMUNERADO', 0) * 0.12)
else:
    actual_amount = contract.get_wage_for_period(payslip.date_from) / 30 * worked_days_dict.get('AUSENCIA_NO_REMUNERADO', 0)
    result = contract.roundup_cent((previous_amount + actual_amount) * 0.12)</field>
        </record>

    <record id="hr_rule_aporte_pension_empresa_ops" model="hr.salary.rule">
            <field name="name">Aporte Pensión Empresa</field>
            <field name="sequence" eval="1021"/>
            <field name="code">1314</field>
            <field name="rule_type">none</field>
            <!--field name="dont_show_in_report">False</field-->
            <field name="category_id" ref="hr_payroll_aporte_pen_empr"/>
            <field name='register_id' ref='contrib_register_pension'/>
            <field name="condition_select">python</field>
            <field name="condition_python">if contract.contract_type == "4":
    result = False
elif worked_days.AUSENCIA_NO_REMUNERADO or contract.get_last_biweek_days_nw(payslip):
    if payslip.date_to.day in (28, 29, 30, 31) or payslip.is_liquid == True:
        result = True
    else:
        result = False
else:
    result= False</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">worked_days_dict = contract.worked_days_dict(payslip)
previous_IBC = contract.get_last_biweek(payslip, ["base_p"])
previous_days = contract.get_last_biweek_days(payslip)
total_days=contract.calculate_active_days(payslip)
if previous_days != 0: # Si trabajó mas de un dia
    if previous_IBC / previous_days &lt; employee.company.salario_minimo/30:
        previous_amount = employee.company.salario_minimo / 30 * previous_days
    else:
        previous_amount = previous_IBC
else:
    previous_amount = contract.get_wage_for_period(payslip.date_from) / 30 * contract.get_last_biweek_days_nw(payslip)
if total_days != 0:
    if categories.base_p / total_days &lt; employee.company.salario_minimo/30:
        actual_amount = employee.company.salario_minimo / 30 * total_days
    else:
        actual_amount = categories.base_p
    result = round((previous_amount + actual_amount) / 30 * worked_days_dict.get('AUSENCIA_NO_REMUNERADO', 0) * 0.12)
else:
    actual_amount = contract.get_wage_for_period(payslip.date_from) / 30 * worked_days_dict.get('AUSENCIA_NO_REMUNERADO', 0)
    result = contract.roundup_cent((previous_amount + actual_amount) * 0.12)</field>
        </record>

    <record id="hr_rule_pen_empres_adm" model="hr.salary.rule">
        <field name="name">Pensión Empresa</field>
        <field name="sequence" eval="1022"/>
        <field name="code">1115</field>
        <field name="rule_type">none</field>
        <!--field name="dont_show_in_report">False</field-->
        <field name="category_id" ref="hr_payroll_pension_empr"/>
        <field name='register_id' ref='contrib_register_pension'/>
        <field name="condition_select">python</field>
        <field name="condition_python">if contract.contract_type == "4":
    result = False
elif payslip.date_from.day &gt; 15 or payslip.date_to.day in (28, 29, 30, 31) or payslip.is_liquid == True:
    result = True</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">previous_IBC = contract.get_last_biweek(payslip, ["base_p"])
previous_days = contract.get_last_biweek_days(payslip)
total_days = contract.calculate_active_days(payslip)
previous_amount = actual_amount = 0
SMMLV = employee.company.salario_minimo
if previous_days != 0:
    if previous_IBC / previous_days &lt; SMMLV/30:
        previous_amount = SMMLV / 30 * previous_days
    else:
        previous_amount = previous_IBC
    
if total_days != 0:
    if categories.base_p / total_days &lt; SMMLV / 30:
        actual_amount = SMMLV / 30 * total_days
    else:
        actual_amount = categories.base_p
IBC = previous_amount + actual_amount
if IBC &gt;= (25 * SMMLV):
    result = (25 * SMMLV) * 0.12
elif employee.employee_type == '02':
    result = contract.roundup_cent(IBC * 0.16)
else:
    result = contract.roundup_cent(IBC * 0.12)</field>
        </record>

    <record id="hr_rule_pen_empres_ven" model="hr.salary.rule">
        <field name="name">Pensión Empresa</field>
        <field name="sequence" eval="1022"/>
        <field name="code">1215</field>
        <field name="rule_type">none</field>
        <field name="category_id" ref="hr_payroll_pension_empr"/>
        <field name='register_id' ref='contrib_register_pension'/>
        <field name="condition_select">python</field>
        <field name="condition_python">if contract.contract_type == "4":
    result = False
elif payslip.date_from.day &gt; 15 or payslip.date_to.day in (28, 29, 30, 31) or payslip.is_liquid == True:
    result = True</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">previous_IBC = contract.get_last_biweek(payslip, ["base_p"])
previous_days = contract.get_last_biweek_days(payslip)
total_days = contract.calculate_active_days(payslip)
previous_amount = actual_amount = 0
SMMLV = employee.company.salario_minimo
if previous_days != 0:
    if previous_IBC / previous_days &lt; SMMLV/30:
        previous_amount = SMMLV / 30 * previous_days
    else:
        previous_amount = previous_IBC
    
if total_days != 0:
    if categories.base_p / total_days &lt; SMMLV / 30:
        actual_amount = SMMLV / 30 * total_days
    else:
        actual_amount = categories.base_p
IBC = previous_amount + actual_amount
if IBC &gt;= (25 * SMMLV):
    result = (25 * SMMLV) * 0.12
elif employee.employee_type == '02':
    result = contract.roundup_cent(IBC * 0.16)
else:
    result = contract.roundup_cent(IBC * 0.12)</field>
        </record>

    <record id="hr_rule_pen_empres_ops" model="hr.salary.rule">
        <field name="name">Pensión Empresa</field>
        <field name="sequence" eval="1022"/>
        <field name="code">1315</field>
        <field name="rule_type">none</field>
        <field name="category_id" ref="hr_payroll_pension_empr"/>
        <field name='register_id' ref='contrib_register_pension'/>
        <field name="condition_select">python</field>
        <field name="condition_python">if contract.contract_type == "4":
    result = False
elif payslip.date_from.day &gt; 15 or payslip.date_to.day in (28, 29, 30, 31) or payslip.is_liquid == True:
    result = True</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">previous_IBC = contract.get_last_biweek(payslip, ["base_p"])
previous_days = contract.get_last_biweek_days(payslip)
total_days = contract.calculate_active_days(payslip)
previous_amount = actual_amount = 0
SMMLV = employee.company.salario_minimo
if previous_days != 0:
    if previous_IBC / previous_days &lt; SMMLV/30:
        previous_amount = SMMLV / 30 * previous_days
    else:
        previous_amount = previous_IBC
    
if total_days != 0:
    if categories.base_p / total_days &lt; SMMLV / 30:
        actual_amount = SMMLV / 30 * total_days
    else:
        actual_amount = categories.base_p
IBC = previous_amount + actual_amount
if IBC &gt;= (25 * SMMLV):
    result = (25 * SMMLV) * 0.12
elif employee.employee_type == '02':
    result = contract.roundup_cent(IBC * 0.16)
else:
    result = contract.roundup_cent(IBC * 0.12)</field>
        </record>

        <!--estructura para liquidacion de contratos --> 

        <record id="hr_rule_baux" model="hr.salary.rule">
            <field name="name">Base Auxilio de Transporte</field>
            <field name="active">False</field>
            <field name="sequence" eval="500"/>
            <field name="code">1509</field>
            <field name="rule_type">none</field>
            <field name="category_id" ref="hr_payroll_baux"/>
            <field name="condition_select">python</field>
            <field name="condition_python">result = contract.get_wage_for_period(payslip.date_from) &lt;= (2*employee.company.salario_minimo) or False</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = employee.company.aux_transporte</field>
        </record>

        <record id="hr_rule_base_sal" model="hr.salary.rule">
            <field name="name">Base salario</field>
            <field name="active">False</field>
            <field name="sequence" eval="5"/>
            <field name="code">1510</field>
            <field name="rule_type">none</field>
            <field name="category_id" ref="hr_payroll_categories_basesal"/>
            <field name="condition_select">none</field>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result=contract.get_wage_for_period(payslip.date_from)</field>
        </record>

        <record id="hr_rule_total_seguridad_social" model="hr.salary.rule">
        <field name="name">Total Seguridad Social</field>
        <field name="sequence" eval="1400"/>
        <field name="active">false</field>
        <field name="code">1440</field>
        <field name="rule_type">none</field>
        <field name="category_id" ref="hr_payroll_categories_total"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if categories.arl &gt; 0 or categories.cdc &gt; 0 or categories.pemp:
    result=True</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">result = categories.arl + categories.cdc + categories.pemp + categories.SAL + categories.PEN</field>      
    </record>

    <!--REGLA SIN USO-->
    <record id="hr_rule_anticipo" model="hr.salary.rule">
        <field name="name">Anticipos</field>
        <field name="active">False</field>
        <field name="sequence" eval="175"/>
        <field name="code">1131</field>
        <field name="rule_type">devengos</field>
        <field name="category_id" ref="hr_payroll_categories_compensaciones_e"/>
        <field name="condition_select">python</field>
        <field name="condition_python">if inputs.anticipo and inputs.anticipo.amount:
    result = inputs.anticipo.amount</field>
        <field name="amount_select">code</field>
        <field name="amount_python_compute">if inputs.anticipo and inputs.anticipo.amount:
    result = inputs.anticipo.amount</field>
    </record>

    <record id="bi_hr_employee_loan_comm.hr_loan_installment_rule" model="hr.salary.rule">
        <field name="category_id" ref="hr_payroll_categories_deuda"/>
        <field name="rule_type">deducciones</field>
    </record>

    <record id="bi_hr_employee_loan_comm.hr_loan_interest_rule" model="hr.salary.rule">
        <field name="category_id" ref="hr_payroll_categories_deuda"/>
        <field name="rule_type">deducciones</field>
    </record>
</data>
</odoo>
